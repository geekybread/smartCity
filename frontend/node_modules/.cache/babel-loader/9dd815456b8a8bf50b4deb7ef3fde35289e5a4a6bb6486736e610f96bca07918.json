{"ast":null,"code":"var _jsxFileName = \"C:\\\\MNNIT\\\\SEM2\\\\programmingLab2\\\\Project\\\\smartcity\\\\smartCity\\\\frontend\\\\src\\\\components\\\\Map\\\\MapLoader.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { GoogleMap, useLoadScript, TrafficLayer } from '@react-google-maps/api';\nimport { GOOGLE_MAPS_CONFIG } from './configs/maps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MapLoader({\n  center,\n  zoom,\n  showTraffic,\n  onLoad,\n  onUnmount,\n  onMapClick\n}) {\n  _s();\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: GOOGLE_MAPS_CONFIG.apiKey,\n    libraries: GOOGLE_MAPS_CONFIG.libraries\n  });\n  if (loadError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-error\",\n    children: \"Error loading map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 25\n  }, this);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-loading\",\n    children: \"Loading Map...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: {\n      width: '100%',\n      height: '100%'\n    },\n    center: center,\n    zoom: zoom,\n    onLoad: onLoad // ✅ sets mapRef.current\n    ,\n    onUnmount: onUnmount,\n    onClick: onMapClick,\n    options: {\n      disableDefaultUI: false,\n      gestureHandling: 'greedy',\n      zoomControl: true,\n      mapTypeControl: true,\n      streetViewControl: true,\n      fullscreenControl: true,\n      styles: [{\n        featureType: \"poi\",\n        elementType: \"labels\",\n        stylers: [{\n          visibility: \"off\"\n        }]\n      }]\n    },\n    children: showTraffic && /*#__PURE__*/_jsxDEV(TrafficLayer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(MapLoader, \"Cye17iwlLw61yP2k5hqy29yMy+o=\", false, function () {\n  return [useLoadScript];\n});\n_c = MapLoader;\nvar _c;\n$RefreshReg$(_c, \"MapLoader\");","map":{"version":3,"names":["React","GoogleMap","useLoadScript","TrafficLayer","GOOGLE_MAPS_CONFIG","jsxDEV","_jsxDEV","MapLoader","center","zoom","showTraffic","onLoad","onUnmount","onMapClick","_s","isLoaded","loadError","googleMapsApiKey","apiKey","libraries","className","children","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","width","height","onClick","options","disableDefaultUI","gestureHandling","zoomControl","mapTypeControl","streetViewControl","fullscreenControl","styles","featureType","elementType","stylers","visibility","_c","$RefreshReg$"],"sources":["C:/MNNIT/SEM2/programmingLab2/Project/smartcity/smartCity/frontend/src/components/Map/MapLoader.js"],"sourcesContent":["import React from 'react';\r\nimport { GoogleMap, useLoadScript, TrafficLayer } from '@react-google-maps/api';\r\nimport { GOOGLE_MAPS_CONFIG } from './configs/maps';\r\n\r\nexport default function MapLoader({\r\n  center,\r\n  zoom,\r\n  showTraffic,\r\n  onLoad,\r\n  onUnmount,\r\n  onMapClick,\r\n}) {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: GOOGLE_MAPS_CONFIG.apiKey,\r\n    libraries: GOOGLE_MAPS_CONFIG.libraries\r\n  });\r\n\r\n  if (loadError) return <div className=\"map-error\">Error loading map</div>;\r\n  if (!isLoaded) return <div className=\"map-loading\">Loading Map...</div>;\r\n\r\n  return (\r\n    <GoogleMap\r\n      mapContainerStyle={{ width: '100%', height: '100%' }}\r\n      center={center}\r\n      zoom={zoom}\r\n      onLoad={onLoad}           // ✅ sets mapRef.current\r\n      onUnmount={onUnmount}\r\n      onClick={onMapClick}\r\n      options={{\r\n        disableDefaultUI: false,\r\n        gestureHandling: 'greedy',\r\n        zoomControl: true,\r\n        mapTypeControl: true,\r\n        streetViewControl: true,\r\n        fullscreenControl: true,\r\n        styles: [{ featureType: \"poi\", elementType: \"labels\", stylers: [{ visibility: \"off\" }] }]\r\n      }}\r\n    >\r\n      {showTraffic && <TrafficLayer />}\r\n    </GoogleMap>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,aAAa,EAAEC,YAAY,QAAQ,wBAAwB;AAC/E,SAASC,kBAAkB,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,eAAe,SAASC,SAASA,CAAC;EAChCC,MAAM;EACNC,IAAI;EACJC,WAAW;EACXC,MAAM;EACNC,SAAS;EACTC;AACF,CAAC,EAAE;EAAAC,EAAA;EACD,MAAM;IAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAGd,aAAa,CAAC;IAC5Ce,gBAAgB,EAAEb,kBAAkB,CAACc,MAAM;IAC3CC,SAAS,EAAEf,kBAAkB,CAACe;EAChC,CAAC,CAAC;EAEF,IAAIH,SAAS,EAAE,oBAAOV,OAAA;IAAKc,SAAS,EAAC,WAAW;IAAAC,QAAA,EAAC;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACxE,IAAI,CAACV,QAAQ,EAAE,oBAAOT,OAAA;IAAKc,SAAS,EAAC,aAAa;IAAAC,QAAA,EAAC;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEvE,oBACEnB,OAAA,CAACL,SAAS;IACRyB,iBAAiB,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAO,CAAE;IACrDpB,MAAM,EAAEA,MAAO;IACfC,IAAI,EAAEA,IAAK;IACXE,MAAM,EAAEA,MAAO,CAAW;IAAA;IAC1BC,SAAS,EAAEA,SAAU;IACrBiB,OAAO,EAAEhB,UAAW;IACpBiB,OAAO,EAAE;MACPC,gBAAgB,EAAE,KAAK;MACvBC,eAAe,EAAE,QAAQ;MACzBC,WAAW,EAAE,IAAI;MACjBC,cAAc,EAAE,IAAI;MACpBC,iBAAiB,EAAE,IAAI;MACvBC,iBAAiB,EAAE,IAAI;MACvBC,MAAM,EAAE,CAAC;QAAEC,WAAW,EAAE,KAAK;QAAEC,WAAW,EAAE,QAAQ;QAAEC,OAAO,EAAE,CAAC;UAAEC,UAAU,EAAE;QAAM,CAAC;MAAE,CAAC;IAC1F,CAAE;IAAApB,QAAA,EAEDX,WAAW,iBAAIJ,OAAA,CAACH,YAAY;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEhB;AAACX,EAAA,CArCuBP,SAAS;EAAA,QAQCL,aAAa;AAAA;AAAAwC,EAAA,GARvBnC,SAAS;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}