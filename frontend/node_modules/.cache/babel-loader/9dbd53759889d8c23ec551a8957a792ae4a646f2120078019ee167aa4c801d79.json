{"ast":null,"code":"var _jsxFileName = \"C:\\\\MNNIT\\\\SEM2\\\\programmingLab2\\\\Project\\\\smartcity\\\\smartCity\\\\frontend\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { GoogleMap, useLoadScript, TrafficLayer } from '@react-google-maps/api';\nimport { getWeatherData, getCityCoordinates } from '../services/weather';\nimport { GOOGLE_MAPS_CONFIG } from '../config/maps';\nimport './Map.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Map = ({\n  city,\n  country,\n  onResult\n}) => {\n  _s();\n  var _weather$main, _weather$weather, _weather$weather$;\n  const [weather, setWeather] = useState(null);\n  const [center, setCenter] = useState({\n    lat: 28.6139,\n    lng: 77.2090\n  });\n  const [map, setMap] = useState(null);\n  const [showTraffic, setShowTraffic] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const prevSearchRef = useRef('');\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: GOOGLE_MAPS_CONFIG.apiKey,\n    libraries: GOOGLE_MAPS_CONFIG.libraries\n  });\n  const fetchData = useCallback(async () => {\n    try {\n      const currentSearch = `${city}|${country}`;\n      if (prevSearchRef.current === currentSearch || !city && !country) {\n        return;\n      }\n      prevSearchRef.current = currentSearch;\n      setIsLoading(true);\n      setWeather(null);\n      const {\n        lat,\n        lon\n      } = await getCityCoordinates(city, country);\n      setCenter({\n        lat,\n        lng: lon\n      });\n      const weatherData = await getWeatherData(lat, lon);\n      setWeather(weatherData);\n      if (onResult) {\n        const message = city ? `${city} found${country ? ` in ${country}` : ''}` : `Showing capital of ${country}`;\n        onResult({\n          success: true,\n          message\n        });\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      if (onResult) {\n        let message;\n        switch (error.message) {\n          case 'CITY_NOT_FOUND':\n            message = `${city} not found${country ? ` in ${country}` : ''}`;\n            break;\n          case 'CITY_NOT_IN_COUNTRY':\n            message = `${city} not found in ${country}`;\n            break;\n          case 'COUNTRY_NOT_FOUND':\n            message = `${country} not found`;\n            break;\n          case 'INVALID_COUNTRY':\n            message = `Invalid country: ${country}`;\n            break;\n          default:\n            message = 'Failed to load location data';\n        }\n        onResult({\n          success: false,\n          message\n        });\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  }, [city, country, onResult]);\n  useEffect(() => {\n    if (!isLoaded) return;\n    fetchData();\n  }, [isLoaded, fetchData]);\n  const onLoad = useCallback(map => {\n    setMap(map);\n  }, []);\n  if (loadError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error loading maps\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 25\n  }, this);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading Maps...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: [/*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: {\n          width: '100%',\n          height: '100%'\n        },\n        zoom: 13,\n        center: center,\n        onLoad: onLoad,\n        children: showTraffic && /*#__PURE__*/_jsxDEV(TrafficLayer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowTraffic(!showTraffic),\n        className: \"traffic-toggle\",\n        disabled: isLoading,\n        children: showTraffic ? 'Hide Traffic' : 'Show Traffic'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-widget\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this) : weather ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [(_weather$main = weather.main) === null || _weather$main === void 0 ? void 0 : _weather$main.temp, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: (_weather$weather = weather.weather) === null || _weather$weather === void 0 ? void 0 : (_weather$weather$ = _weather$weather[0]) === null || _weather$weather$ === void 0 ? void 0 : _weather$weather$.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No weather data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"KS5u2Bu5BOUv27CDESTTi/vzrFM=\", false, function () {\n  return [useLoadScript];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","GoogleMap","useLoadScript","TrafficLayer","getWeatherData","getCityCoordinates","GOOGLE_MAPS_CONFIG","jsxDEV","_jsxDEV","Fragment","_Fragment","Map","city","country","onResult","_s","_weather$main","_weather$weather","_weather$weather$","weather","setWeather","center","setCenter","lat","lng","map","setMap","showTraffic","setShowTraffic","isLoading","setIsLoading","prevSearchRef","useRef","isLoaded","loadError","googleMapsApiKey","apiKey","libraries","fetchData","currentSearch","current","lon","weatherData","message","success","error","console","onLoad","children","fileName","_jsxFileName","lineNumber","columnNumber","className","mapContainerStyle","width","height","zoom","onClick","disabled","main","temp","description","_c","$RefreshReg$"],"sources":["C:/MNNIT/SEM2/programmingLab2/Project/smartcity/smartCity/frontend/src/components/Map.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { GoogleMap, useLoadScript, TrafficLayer } from '@react-google-maps/api';\r\nimport { getWeatherData, getCityCoordinates } from '../services/weather';\r\nimport { GOOGLE_MAPS_CONFIG } from '../config/maps';\r\nimport './Map.css';\r\n\r\nconst Map = ({ city, country, onResult }) => {\r\n  const [weather, setWeather] = useState(null);\r\n  const [center, setCenter] = useState({ lat: 28.6139, lng: 77.2090 });\r\n  const [map, setMap] = useState(null);\r\n  const [showTraffic, setShowTraffic] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const prevSearchRef = useRef('');\r\n\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: GOOGLE_MAPS_CONFIG.apiKey,\r\n    libraries: GOOGLE_MAPS_CONFIG.libraries,\r\n  });\r\n\r\n  const fetchData = useCallback(async () => {\r\n    try {\r\n      const currentSearch = `${city}|${country}`;\r\n      if (prevSearchRef.current === currentSearch || (!city && !country)) {\r\n        return;\r\n      }\r\n      prevSearchRef.current = currentSearch;\r\n\r\n      setIsLoading(true);\r\n      setWeather(null);\r\n\r\n      const { lat, lon } = await getCityCoordinates(city, country);\r\n      setCenter({ lat, lng: lon });\r\n\r\n      const weatherData = await getWeatherData(lat, lon);\r\n      setWeather(weatherData);\r\n\r\n      if (onResult) {\r\n        const message = city \r\n          ? `${city} found${country ? ` in ${country}` : ''}`\r\n          : `Showing capital of ${country}`;\r\n        onResult({ success: true, message });\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      if (onResult) {\r\n        let message;\r\n        switch(error.message) {\r\n          case 'CITY_NOT_FOUND':\r\n            message = `${city} not found${country ? ` in ${country}` : ''}`;\r\n            break;\r\n          case 'CITY_NOT_IN_COUNTRY':\r\n            message = `${city} not found in ${country}`;\r\n            break;\r\n          case 'COUNTRY_NOT_FOUND':\r\n            message = `${country} not found`;\r\n            break;\r\n          case 'INVALID_COUNTRY':\r\n            message = `Invalid country: ${country}`;\r\n            break;\r\n          default:\r\n            message = 'Failed to load location data';\r\n        }\r\n        onResult({ success: false, message });\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [city, country, onResult]);\r\n\r\n  useEffect(() => {\r\n    if (!isLoaded) return;\r\n    fetchData();\r\n  }, [isLoaded, fetchData]);\r\n\r\n  const onLoad = useCallback((map) => {\r\n    setMap(map);\r\n  }, []);\r\n\r\n  if (loadError) return <div>Error loading maps</div>;\r\n  if (!isLoaded) return <div>Loading Maps...</div>;\r\n\r\n  return (\r\n    <div className=\"map-page-container\">\r\n      <div className=\"map-container\">\r\n        <GoogleMap\r\n          mapContainerStyle={{ width: '100%', height: '100%' }}\r\n          zoom={13}\r\n          center={center}\r\n          onLoad={onLoad}\r\n        >\r\n          {showTraffic && <TrafficLayer />}\r\n        </GoogleMap>\r\n        <button\r\n          onClick={() => setShowTraffic(!showTraffic)}\r\n          className=\"traffic-toggle\"\r\n          disabled={isLoading}\r\n        >\r\n          {showTraffic ? 'Hide Traffic' : 'Show Traffic'}\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"weather-widget\">\r\n        <h2>Weather</h2>\r\n        {isLoading ? (\r\n          <div>Loading...</div>\r\n        ) : weather ? (\r\n          <>\r\n            <p>{weather.main?.temp}°C</p>\r\n            <p>{weather.weather?.[0]?.description}</p>\r\n          </>\r\n        ) : (\r\n          <div>No weather data</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}