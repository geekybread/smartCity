{"ast":null,"code":"var _s = $RefreshSig$();\n// src/components/Map/hooks/useAlerts.js\n\nimport { useState, useEffect } from 'react';\nimport api from '../../../services/api';\nimport { useAuth } from '../../../context/AuthContext';\nexport default function useAlerts(city) {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [alerts, setAlerts] = useState([]);\n  useEffect(() => {\n    if (!city) {\n      setAlerts([]);\n      return;\n    }\n    const fetchAlerts = async () => {\n      const {\n        data\n      } = await api.get(`/api/emergency-alerts/?city=${encodeURIComponent(city)}`);\n      const now = new Date();\n      let list = data.filter(a => new Date(a.expiry_time) > now);\n      if (user) {\n        list = list.filter(a => !a.is_seen);\n        for (const a of list) {\n          try {\n            await api.post(`/emergency-alerts/${a.id}/mark_seen/`);\n          } catch {}\n        }\n      }\n      setAlerts(list);\n    };\n    fetchAlerts();\n  }, [city, user]);\n  return {\n    alerts\n  };\n}\n_s(useAlerts, \"l7rqlLjENGhB1YghBYP6Tka3Tj0=\", false, function () {\n  return [useAuth];\n});","map":{"version":3,"names":["useState","useEffect","api","useAuth","useAlerts","city","_s","user","alerts","setAlerts","fetchAlerts","data","get","encodeURIComponent","now","Date","list","filter","a","expiry_time","is_seen","post","id"],"sources":["C:/MNNIT/SEM2/programmingLab2/Project/smartcity/smartCity/frontend/src/components/Map/hooks/useAlerts.js"],"sourcesContent":["// src/components/Map/hooks/useAlerts.js\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport api from '../../../services/api'\r\nimport { useAuth } from '../../../context/AuthContext'\r\n\r\nexport default function useAlerts(city) {\r\n  const { user } = useAuth()\r\n  const [alerts, setAlerts] = useState([])\r\n\r\n  useEffect(() => {\r\n    if (!city) {\r\n      setAlerts([])\r\n      return\r\n    }\r\n\r\n    const fetchAlerts = async () => {\r\n      const { data } = await api.get(`/api/emergency-alerts/?city=${encodeURIComponent(city)}`)\r\n      const now = new Date()\r\n      let list = data.filter(a => new Date(a.expiry_time) > now)\r\n\r\n      if (user) {\r\n        list = list.filter(a => !a.is_seen)\r\n        for (const a of list) {\r\n          try {\r\n            await api.post(`/emergency-alerts/${a.id}/mark_seen/`)\r\n          } catch {}\r\n        }\r\n      }\r\n\r\n      setAlerts(list)\r\n    }\r\n\r\n    fetchAlerts()\r\n  }, [city, user])\r\n\r\n  return { alerts }\r\n}\r\n"],"mappings":";AAAA;;AAEA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,GAAG,MAAM,uBAAuB;AACvC,SAASC,OAAO,QAAQ,8BAA8B;AAEtD,eAAe,SAASC,SAASA,CAACC,IAAI,EAAE;EAAAC,EAAA;EACtC,MAAM;IAAEC;EAAK,CAAC,GAAGJ,OAAO,CAAC,CAAC;EAC1B,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,IAAI,CAACI,IAAI,EAAE;MACTI,SAAS,CAAC,EAAE,CAAC;MACb;IACF;IAEA,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMT,GAAG,CAACU,GAAG,CAAC,+BAA+BC,kBAAkB,CAACR,IAAI,CAAC,EAAE,CAAC;MACzF,MAAMS,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;MACtB,IAAIC,IAAI,GAAGL,IAAI,CAACM,MAAM,CAACC,CAAC,IAAI,IAAIH,IAAI,CAACG,CAAC,CAACC,WAAW,CAAC,GAAGL,GAAG,CAAC;MAE1D,IAAIP,IAAI,EAAE;QACRS,IAAI,GAAGA,IAAI,CAACC,MAAM,CAACC,CAAC,IAAI,CAACA,CAAC,CAACE,OAAO,CAAC;QACnC,KAAK,MAAMF,CAAC,IAAIF,IAAI,EAAE;UACpB,IAAI;YACF,MAAMd,GAAG,CAACmB,IAAI,CAAC,qBAAqBH,CAAC,CAACI,EAAE,aAAa,CAAC;UACxD,CAAC,CAAC,MAAM,CAAC;QACX;MACF;MAEAb,SAAS,CAACO,IAAI,CAAC;IACjB,CAAC;IAEDN,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACL,IAAI,EAAEE,IAAI,CAAC,CAAC;EAEhB,OAAO;IAAEC;EAAO,CAAC;AACnB;AAACF,EAAA,CA/BuBF,SAAS;EAAA,QACdD,OAAO;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}