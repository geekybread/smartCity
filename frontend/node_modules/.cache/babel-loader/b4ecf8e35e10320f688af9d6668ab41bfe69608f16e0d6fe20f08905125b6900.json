{"ast":null,"code":"var _jsxFileName = \"C:\\\\MNNIT\\\\SEM2\\\\programmingLab2\\\\Project\\\\smartcity\\\\smartCity\\\\frontend\\\\src\\\\components\\\\Alerts\\\\EmergencyBanner.js\",\n  _s = $RefreshSig$();\n// src/components/Alerts/EmergencyBanner.js\n\nimport React, { useEffect, useState } from 'react';\nimport api from '../../services/api';\nimport { useAuth } from '../../context/AuthContext';\nimport './EmergencyBanner.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log('✅ EmergencyBanner loaded');\nconst EmergencyBanner = ({\n  city\n}) => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [alerts, setAlerts] = useState([]);\n  const [dismissedIds, setDismissedIds] = useState(new Set());\n\n  // load dismissed IDs from localStorage for guests\n  useEffect(() => {\n    if (!user) {\n      const stored = localStorage.getItem('dismissedAlerts');\n      if (stored) {\n        setDismissedIds(new Set(JSON.parse(stored)));\n      }\n    }\n  }, [user]);\n\n  // persist dismissed IDs for guests\n  useEffect(() => {\n    if (!user) {\n      localStorage.setItem('dismissedAlerts', JSON.stringify(Array.from(dismissedIds)));\n    }\n  }, [dismissedIds, user]);\n\n  // fetch alerts, filter by expiry + seen/dismissed\n  useEffect(() => {\n    if (!city) {\n      setAlerts([]);\n      return;\n    }\n    const fetchAlerts = async () => {\n      try {\n        const {\n          data\n        } = await api.get(`/api/emergency-alerts/?city=${encodeURIComponent(city)}`);\n        const now = new Date();\n        let list = data.filter(a => new Date(a.expiry_time) > now);\n        if (user) {\n          // only show not-yet-seen alerts\n          list = list.filter(a => !a.is_seen);\n          // mark all returned as seen\n          list.forEach(a => {\n            api.post(`/api/emergency-alerts/${a.id}/mark_seen/`).catch(() => {});\n          });\n        } else {\n          // guests: remove those they've dismissed\n          list = list.filter(a => !dismissedIds.has(a.id));\n        }\n        setAlerts(list);\n      } catch (err) {\n        console.error('Error fetching alerts:', err);\n        setAlerts([]);\n      }\n    };\n    fetchAlerts();\n    // refresh every 30s in case new alerts appear or expire\n    const interval = setInterval(fetchAlerts, 30000);\n    return () => clearInterval(interval);\n  }, [city, user, dismissedIds]);\n  const dismissAlert = id => {\n    if (!user) {\n      setDismissedIds(prev => new Set(prev).add(id));\n    }\n  };\n  if (!alerts.length) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"emergency-banner-container\",\n    children: alerts.map(alert => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `emergency-banner ${alert.level || ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [alert.title || 'Alert', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), \" \", alert.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), !user && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dismiss-button\",\n        onClick: () => dismissAlert(alert.id),\n        children: \"\\u2716\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)]\n    }, alert.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(EmergencyBanner, \"1dngLbXX10XbnqGJbFHNg1O/cK0=\", false, function () {\n  return [useAuth];\n});\n_c = EmergencyBanner;\nexport default EmergencyBanner;\nvar _c;\n$RefreshReg$(_c, \"EmergencyBanner\");","map":{"version":3,"names":["React","useEffect","useState","api","useAuth","jsxDEV","_jsxDEV","console","log","EmergencyBanner","city","_s","user","alerts","setAlerts","dismissedIds","setDismissedIds","Set","stored","localStorage","getItem","JSON","parse","setItem","stringify","Array","from","fetchAlerts","data","get","encodeURIComponent","now","Date","list","filter","a","expiry_time","is_seen","forEach","post","id","catch","has","err","error","interval","setInterval","clearInterval","dismissAlert","prev","add","length","className","children","map","alert","level","title","fileName","_jsxFileName","lineNumber","columnNumber","message","onClick","_c","$RefreshReg$"],"sources":["C:/MNNIT/SEM2/programmingLab2/Project/smartcity/smartCity/frontend/src/components/Alerts/EmergencyBanner.js"],"sourcesContent":["// src/components/Alerts/EmergencyBanner.js\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport api from '../../services/api'\r\nimport { useAuth } from '../../context/AuthContext'\r\nimport './EmergencyBanner.css'\r\n\r\nconsole.log('✅ EmergencyBanner loaded')\r\n\r\nconst EmergencyBanner = ({ city }) => {\r\n  const { user } = useAuth()\r\n  const [alerts, setAlerts] = useState([])\r\n  const [dismissedIds, setDismissedIds] = useState(new Set())\r\n\r\n  // load dismissed IDs from localStorage for guests\r\n  useEffect(() => {\r\n    if (!user) {\r\n      const stored = localStorage.getItem('dismissedAlerts')\r\n      if (stored) {\r\n        setDismissedIds(new Set(JSON.parse(stored)))\r\n      }\r\n    }\r\n  }, [user])\r\n\r\n  // persist dismissed IDs for guests\r\n  useEffect(() => {\r\n    if (!user) {\r\n      localStorage.setItem(\r\n        'dismissedAlerts',\r\n        JSON.stringify(Array.from(dismissedIds))\r\n      )\r\n    }\r\n  }, [dismissedIds, user])\r\n\r\n  // fetch alerts, filter by expiry + seen/dismissed\r\n  useEffect(() => {\r\n    if (!city) {\r\n      setAlerts([])\r\n      return\r\n    }\r\n\r\n    const fetchAlerts = async () => {\r\n      try {\r\n        const { data } = await api.get(\r\n          `/api/emergency-alerts/?city=${encodeURIComponent(city)}`\r\n        )\r\n        const now = new Date()\r\n        let list = data.filter(a => new Date(a.expiry_time) > now)\r\n\r\n        if (user) {\r\n          // only show not-yet-seen alerts\r\n          list = list.filter(a => !a.is_seen)\r\n          // mark all returned as seen\r\n          list.forEach(a => {\r\n            api.post(`/api/emergency-alerts/${a.id}/mark_seen/`).catch(() => {})\r\n          })\r\n        } else {\r\n          // guests: remove those they've dismissed\r\n          list = list.filter(a => !dismissedIds.has(a.id))\r\n        }\r\n\r\n        setAlerts(list)\r\n      } catch (err) {\r\n        console.error('Error fetching alerts:', err)\r\n        setAlerts([])\r\n      }\r\n    }\r\n\r\n    fetchAlerts()\r\n    // refresh every 30s in case new alerts appear or expire\r\n    const interval = setInterval(fetchAlerts, 30000)\r\n    return () => clearInterval(interval)\r\n  }, [city, user, dismissedIds])\r\n\r\n  const dismissAlert = id => {\r\n    if (!user) {\r\n      setDismissedIds(prev => new Set(prev).add(id))\r\n    }\r\n  }\r\n\r\n  if (!alerts.length) return null\r\n\r\n  return (\r\n    <div className=\"emergency-banner-container\">\r\n      {alerts.map(alert => (\r\n        <div key={alert.id} className={`emergency-banner ${alert.level || ''}`}>\r\n          <div className=\"alert-content\">\r\n            <strong>{alert.title || 'Alert'}:</strong> {alert.message}\r\n          </div>\r\n          {!user && (\r\n            <button\r\n              className=\"dismiss-button\"\r\n              onClick={() => dismissAlert(alert.id)}\r\n            >\r\n              ✖\r\n            </button>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EmergencyBanner\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}