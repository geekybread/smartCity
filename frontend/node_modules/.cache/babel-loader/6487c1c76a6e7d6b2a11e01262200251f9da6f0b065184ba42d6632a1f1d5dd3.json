{"ast":null,"code":"var _jsxFileName = \"C:\\\\MNNIT\\\\SEM2\\\\programmingLab2\\\\Project\\\\smartcity\\\\smartCity\\\\frontend\\\\src\\\\components\\\\Map\\\\MapLoader.js\",\n  _s = $RefreshSig$();\n// src/components/Map/MapLoader.js\nimport React from 'react';\nimport { GoogleMap, useLoadScript, TrafficLayer, Polygon } from '@react-google-maps/api';\nimport { GOOGLE_MAPS_CONFIG } from './configs/maps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MapLoader({\n  center,\n  zoom,\n  showTraffic,\n  showZones,\n  accidentZones,\n  onLoad,\n  onUnmount,\n  onMapClick,\n  onMarkerClick\n}) {\n  _s();\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: GOOGLE_MAPS_CONFIG.apiKey,\n    libraries: ['drawing']\n  });\n  if (loadError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-error\",\n    children: \"Error loading map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 25\n  }, this);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-loading\",\n    children: \"Loading Map...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: {\n      width: '100%',\n      height: '100%'\n    },\n    center: center,\n    zoom: zoom,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    onClick: onMapClick,\n    options: {\n      disableDefaultUI: false,\n      gestureHandling: 'greedy',\n      zoomControl: true\n    },\n    children: [showTraffic && /*#__PURE__*/_jsxDEV(TrafficLayer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 23\n    }, this), showZones && accidentZones.map(zone => /*#__PURE__*/_jsxDEV(Polygon, {\n      paths: zone.polygon,\n      options: {\n        fillColor: 'red',\n        fillOpacity: 0.3,\n        strokeColor: 'red',\n        strokeOpacity: 0.8\n      }\n    }, zone.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(MapLoader, \"Cye17iwlLw61yP2k5hqy29yMy+o=\", false, function () {\n  return [useLoadScript];\n});\n_c = MapLoader;\nvar _c;\n$RefreshReg$(_c, \"MapLoader\");","map":{"version":3,"names":["React","GoogleMap","useLoadScript","TrafficLayer","Polygon","GOOGLE_MAPS_CONFIG","jsxDEV","_jsxDEV","MapLoader","center","zoom","showTraffic","showZones","accidentZones","onLoad","onUnmount","onMapClick","onMarkerClick","_s","isLoaded","loadError","googleMapsApiKey","apiKey","libraries","className","children","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","width","height","onClick","options","disableDefaultUI","gestureHandling","zoomControl","map","zone","paths","polygon","fillColor","fillOpacity","strokeColor","strokeOpacity","id","_c","$RefreshReg$"],"sources":["C:/MNNIT/SEM2/programmingLab2/Project/smartcity/smartCity/frontend/src/components/Map/MapLoader.js"],"sourcesContent":["// src/components/Map/MapLoader.js\r\nimport React from 'react'\r\nimport { GoogleMap, useLoadScript, TrafficLayer, Polygon } from '@react-google-maps/api'\r\nimport { GOOGLE_MAPS_CONFIG } from './configs/maps'\r\n\r\nexport default function MapLoader({\r\n  center, zoom,\r\n  showTraffic, showZones, accidentZones,\r\n  onLoad, onUnmount, onMapClick, onMarkerClick\r\n}) {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: GOOGLE_MAPS_CONFIG.apiKey,\r\n    libraries: ['drawing']\r\n  })\r\n\r\n  if (loadError) return <div className=\"map-error\">Error loading map</div>\r\n  if (!isLoaded) return <div className=\"map-loading\">Loading Map...</div>\r\n\r\n  return (\r\n    <GoogleMap\r\n      mapContainerStyle={{ width:'100%', height:'100%' }}\r\n      center={center}\r\n      zoom={zoom}\r\n      onLoad={onLoad}\r\n      onUnmount={onUnmount}\r\n      onClick={onMapClick}\r\n      options={{\r\n        disableDefaultUI: false,\r\n        gestureHandling: 'greedy',\r\n        zoomControl: true,\r\n      }}\r\n    >\r\n      {showTraffic && <TrafficLayer />}\r\n      {showZones && accidentZones.map(zone => (\r\n        <Polygon\r\n          key={zone.id}\r\n          paths={zone.polygon}\r\n          options={{\r\n            fillColor:   'red',\r\n            fillOpacity: 0.3,\r\n            strokeColor: 'red',\r\n            strokeOpacity: 0.8,\r\n          }}\r\n        />\r\n      ))}\r\n      {/* other layers/markers */}\r\n    </GoogleMap>\r\n  )\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,aAAa,EAAEC,YAAY,EAAEC,OAAO,QAAQ,wBAAwB;AACxF,SAASC,kBAAkB,QAAQ,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,SAASA,CAAC;EAChCC,MAAM;EAAEC,IAAI;EACZC,WAAW;EAAEC,SAAS;EAAEC,aAAa;EACrCC,MAAM;EAAEC,SAAS;EAAEC,UAAU;EAAEC;AACjC,CAAC,EAAE;EAAAC,EAAA;EACD,MAAM;IAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAGlB,aAAa,CAAC;IAC5CmB,gBAAgB,EAAEhB,kBAAkB,CAACiB,MAAM;IAC3CC,SAAS,EAAE,CAAC,SAAS;EACvB,CAAC,CAAC;EAEF,IAAIH,SAAS,EAAE,oBAAOb,OAAA;IAAKiB,SAAS,EAAC,WAAW;IAAAC,QAAA,EAAC;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACxE,IAAI,CAACV,QAAQ,EAAE,oBAAOZ,OAAA;IAAKiB,SAAS,EAAC,aAAa;IAAAC,QAAA,EAAC;EAAc;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEvE,oBACEtB,OAAA,CAACN,SAAS;IACR6B,iBAAiB,EAAE;MAAEC,KAAK,EAAC,MAAM;MAAEC,MAAM,EAAC;IAAO,CAAE;IACnDvB,MAAM,EAAEA,MAAO;IACfC,IAAI,EAAEA,IAAK;IACXI,MAAM,EAAEA,MAAO;IACfC,SAAS,EAAEA,SAAU;IACrBkB,OAAO,EAAEjB,UAAW;IACpBkB,OAAO,EAAE;MACPC,gBAAgB,EAAE,KAAK;MACvBC,eAAe,EAAE,QAAQ;MACzBC,WAAW,EAAE;IACf,CAAE;IAAAZ,QAAA,GAEDd,WAAW,iBAAIJ,OAAA,CAACJ,YAAY;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC/BjB,SAAS,IAAIC,aAAa,CAACyB,GAAG,CAACC,IAAI,iBAClChC,OAAA,CAACH,OAAO;MAENoC,KAAK,EAAED,IAAI,CAACE,OAAQ;MACpBP,OAAO,EAAE;QACPQ,SAAS,EAAI,KAAK;QAClBC,WAAW,EAAE,GAAG;QAChBC,WAAW,EAAE,KAAK;QAClBC,aAAa,EAAE;MACjB;IAAE,GAPGN,IAAI,CAACO,EAAE;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQb,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEO,CAAC;AAEhB;AAACX,EAAA,CA3CuBV,SAAS;EAAA,QAKCN,aAAa;AAAA;AAAA6C,EAAA,GALvBvC,SAAS;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}