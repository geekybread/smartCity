{"ast":null,"code":"var _s = $RefreshSig$();\n// src/components/Map/hooks/useAlerts.js\n\nimport { useState, useEffect } from 'react';\nimport api from '../../../services/api';\nexport default function useAlerts(city, user) {\n  _s();\n  const [alerts, setAlerts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!city) {\n      setAlerts([]);\n      return;\n    }\n    setLoading(true);\n    api.get(`/api/emergency-alerts/?city=${encodeURIComponent(city)}`).then(res => {\n      // if logged in, only show not-seen alerts\n      const list = res.data.filter(a => !user || !a.is_seen);\n      setAlerts(list);\n      // if logged in, mark each as seen\n      if (user) {\n        list.forEach(a => api.post(`/api/emergency-alerts/${a.id}/mark_seen/`));\n      }\n    }).catch(err => {\n      setError(err);\n      setAlerts([]);\n    }).finally(() => setLoading(false));\n  }, [city, user]);\n  return {\n    alerts,\n    loading,\n    error\n  };\n}\n_s(useAlerts, \"/vV0NdMX2EjB1COSECdOFKFU7M4=\");","map":{"version":3,"names":["useState","useEffect","api","useAlerts","city","user","_s","alerts","setAlerts","loading","setLoading","error","setError","get","encodeURIComponent","then","res","list","data","filter","a","is_seen","forEach","post","id","catch","err","finally"],"sources":["C:/MNNIT/SEM2/programmingLab2/Project/smartcity/smartCity/frontend/src/components/Map/hooks/useAlerts.js"],"sourcesContent":["// src/components/Map/hooks/useAlerts.js\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport api from '../../../services/api'\r\n\r\nexport default function useAlerts(city, user) {\r\n  const [alerts, setAlerts]     = useState([])\r\n  const [loading, setLoading]   = useState(false)\r\n  const [error, setError]       = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (!city) {\r\n      setAlerts([])\r\n      return\r\n    }\r\n    setLoading(true)\r\n    api.get(`/api/emergency-alerts/?city=${encodeURIComponent(city)}`)\r\n      .then(res => {\r\n        // if logged in, only show not-seen alerts\r\n        const list = res.data.filter(a => !user || !a.is_seen)\r\n        setAlerts(list)\r\n        // if logged in, mark each as seen\r\n        if (user) {\r\n          list.forEach(a =>\r\n            api.post(`/api/emergency-alerts/${a.id}/mark_seen/`)\r\n          )\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setError(err)\r\n        setAlerts([])\r\n      })\r\n      .finally(() => setLoading(false))\r\n  }, [city, user])\r\n\r\n  return { alerts, loading, error }\r\n}\r\n"],"mappings":";AAAA;;AAEA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,GAAG,MAAM,uBAAuB;AAEvC,eAAe,SAASC,SAASA,CAACC,IAAI,EAAEC,IAAI,EAAE;EAAAC,EAAA;EAC5C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAOR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAKV,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAASZ,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,IAAI,CAACG,IAAI,EAAE;MACTI,SAAS,CAAC,EAAE,CAAC;MACb;IACF;IACAE,UAAU,CAAC,IAAI,CAAC;IAChBR,GAAG,CAACW,GAAG,CAAC,+BAA+BC,kBAAkB,CAACV,IAAI,CAAC,EAAE,CAAC,CAC/DW,IAAI,CAACC,GAAG,IAAI;MACX;MACA,MAAMC,IAAI,GAAGD,GAAG,CAACE,IAAI,CAACC,MAAM,CAACC,CAAC,IAAI,CAACf,IAAI,IAAI,CAACe,CAAC,CAACC,OAAO,CAAC;MACtDb,SAAS,CAACS,IAAI,CAAC;MACf;MACA,IAAIZ,IAAI,EAAE;QACRY,IAAI,CAACK,OAAO,CAACF,CAAC,IACZlB,GAAG,CAACqB,IAAI,CAAC,yBAAyBH,CAAC,CAACI,EAAE,aAAa,CACrD,CAAC;MACH;IACF,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;MACZd,QAAQ,CAACc,GAAG,CAAC;MACblB,SAAS,CAAC,EAAE,CAAC;IACf,CAAC,CAAC,CACDmB,OAAO,CAAC,MAAMjB,UAAU,CAAC,KAAK,CAAC,CAAC;EACrC,CAAC,EAAE,CAACN,IAAI,EAAEC,IAAI,CAAC,CAAC;EAEhB,OAAO;IAAEE,MAAM;IAAEE,OAAO;IAAEE;EAAM,CAAC;AACnC;AAACL,EAAA,CA/BuBH,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}