{"ast":null,"code":"var _jsxFileName = \"C:\\\\MNNIT\\\\SEM2\\\\programmingLab2\\\\Project\\\\smartcity\\\\smartCity\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useAuth } from './context/AuthContext';\nimport GoogleAuth from './components/Auth/GoogleLogin';\nimport Map from './components/Map';\nimport './App.css';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport EmergencyBanner from './components/Alerts/EmergencyBanner';\nimport PhoneVerificationModal from './components/Auth/PhoneVerificationModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = process.env.REACT_APP_API_BASE_URL;\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Token ${token}`;\n  }\n  return config;\n});\nfunction App() {\n  _s();\n  const {\n    loading,\n    user,\n    refreshUser\n  } = useAuth();\n  const [location, setLocation] = useState(null);\n  const [pendingLocation, setPendingLocation] = useState(null);\n  const [searchQuery, setSearchQuery] = useState({\n    city: '',\n    country: ''\n  });\n  const mapRef = useRef();\n  const [showPhonePrompt, setShowPhonePrompt] = useState(false);\n  const fetchCityFromCoordinates = async (lat, lng) => {\n    const apiKey = process.env.REACT_APP_GOOGLE_GEOCODE_API_KEY;\n    const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=${apiKey}`;\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      if (data.status === 'OK') {\n        const result = data.results.find(r => r.types.includes('locality') || r.types.includes('administrative_area_level_2'));\n        if (result) {\n          const cityComp = result.address_components.find(c => c.types.includes('locality') || c.types.includes('administrative_area_level_2'));\n          return cityComp === null || cityComp === void 0 ? void 0 : cityComp.long_name;\n        }\n      } else {\n        console.warn('🧭 Geocode error:', data.status, data.error_message);\n      }\n    } catch (error) {\n      console.error('❌ Failed to fetch city name:', error);\n    }\n    return null;\n  };\n  useEffect(() => {\n    if (location) return;\n    navigator.geolocation.getCurrentPosition(async pos => {\n      const {\n        latitude,\n        longitude\n      } = pos.coords;\n      const city = await fetchCityFromCoordinates(latitude, longitude);\n      setLocation({\n        city: city || 'Unknown',\n        country: 'India',\n        coordinates: {\n          lat: latitude,\n          lng: longitude\n        },\n        isUserLocation: true\n      });\n    }, err => {\n      console.warn(\"⚠️ Geolocation failed. Using fallback location:\", err.message);\n      setLocation({\n        city: 'New Delhi',\n        country: 'India',\n        coordinates: {\n          lat: 28.6139,\n          lng: 77.209\n        },\n        isUserLocation: false\n      });\n    }, {\n      enableHighAccuracy: true,\n      timeout: 10000,\n      maximumAge: 0\n    });\n  }, [location]);\n  useEffect(() => {\n    if (pendingLocation) {\n      setLocation(pendingLocation);\n      setPendingLocation(null);\n    }\n  }, [pendingLocation]);\n  useEffect(() => {\n    if (user && (!user.phone_number || !user.is_phone_verified)) {\n      setShowPhonePrompt(true);\n    } else {\n      setShowPhonePrompt(false); // ✅ Close the modal on logout or if verified\n    }\n  }, [user]);\n  const handleMapResult = useCallback(result => {\n    if (result.success) toast.success(result.message);else toast.error(result.message);\n    if (result.mapRef) {\n      mapRef.current = result.mapRef;\n    }\n  }, []);\n  const handleSearch = e => {\n    var _location$city, _location$country;\n    e.preventDefault();\n    const city = searchQuery.city.trim();\n    const country = searchQuery.country.trim();\n    if (!city && !country) {\n      toast.error('Please enter a city or country');\n      return;\n    }\n    const newLoc = {\n      city,\n      country\n    };\n    if (newLoc.city.toLowerCase() === (location === null || location === void 0 ? void 0 : (_location$city = location.city) === null || _location$city === void 0 ? void 0 : _location$city.toLowerCase()) && newLoc.country.toLowerCase() === (location === null || location === void 0 ? void 0 : (_location$country = location.country) === null || _location$country === void 0 ? void 0 : _location$country.toLowerCase())) {\n      var _mapRef$current;\n      if ((_mapRef$current = mapRef.current) !== null && _mapRef$current !== void 0 && _mapRef$current.refocus) {\n        mapRef.current.refocus();\n        toast.info(`Refocusing on ${newLoc.city || newLoc.country}`);\n      } else {\n        toast.info('Already showing this location');\n      }\n    } else {\n      setPendingLocation(newLoc);\n      toast.info('Searching for location...');\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSearchQuery(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  if (loading || !location) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-screen\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Smart City Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-center\",\n      autoClose: 2000,\n      hideProgressBar: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-controls\",\n      children: /*#__PURE__*/_jsxDEV(GoogleAuth, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"city\",\n            placeholder: \"City (e.g. Delhi)\",\n            value: searchQuery.city,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"country\",\n            placeholder: \"Country (e.g. India)\",\n            value: searchQuery.country,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"search-button\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmergencyBanner, {\n      city: location.city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Map, {\n      city: location.city,\n      country: location.country,\n      coordinates: location.coordinates,\n      isUserLocation: location.isUserLocation,\n      onResult: handleMapResult,\n      ref: mapRef,\n      mapRef: mapRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), showPhonePrompt && /*#__PURE__*/_jsxDEV(PhoneVerificationModal, {\n      isOpen: showPhonePrompt,\n      onClose: () => setShowPhonePrompt(false),\n      onVerified: async () => {\n        await refreshUser(); // ✅ pull latest phone_verified flag\n        setShowPhonePrompt(false); // ✅ hide modal\n        toast.success(\"Phone verified successfully\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"K5F3Sx/ojbvDQQS6niz5t6OzmyA=\", false, function () {\n  return [useAuth];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useAuth","GoogleAuth","Map","axios","ToastContainer","toast","EmergencyBanner","PhoneVerificationModal","jsxDEV","_jsxDEV","defaults","baseURL","process","env","REACT_APP_API_BASE_URL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","App","_s","loading","user","refreshUser","location","setLocation","pendingLocation","setPendingLocation","searchQuery","setSearchQuery","city","country","mapRef","showPhonePrompt","setShowPhonePrompt","fetchCityFromCoordinates","lat","lng","apiKey","REACT_APP_GOOGLE_GEOCODE_API_KEY","url","response","fetch","data","json","status","result","results","find","r","types","includes","cityComp","address_components","c","long_name","console","warn","error_message","error","navigator","geolocation","getCurrentPosition","pos","latitude","longitude","coords","coordinates","isUserLocation","err","message","enableHighAccuracy","timeout","maximumAge","phone_number","is_phone_verified","handleMapResult","success","current","handleSearch","e","_location$city","_location$country","preventDefault","trim","newLoc","toLowerCase","_mapRef$current","refocus","info","handleInputChange","name","value","target","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","position","autoClose","hideProgressBar","onSubmit","type","placeholder","onChange","onResult","ref","isOpen","onClose","onVerified","_c","$RefreshReg$"],"sources":["C:/MNNIT/SEM2/programmingLab2/Project/smartcity/smartCity/frontend/src/App.js"],"sourcesContent":["// src/App.js\r\n\r\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { useAuth } from './context/AuthContext';\r\nimport GoogleAuth from './components/Auth/GoogleLogin';\r\nimport Map from './components/Map';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport EmergencyBanner from './components/Alerts/EmergencyBanner';\r\nimport PhoneVerificationModal from './components/Auth/PhoneVerificationModal';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_BASE_URL;\r\naxios.interceptors.request.use(config => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Token ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nfunction App() {\r\n  const { loading, user, refreshUser } = useAuth();\r\n  const [location, setLocation] = useState(null);\r\n  const [pendingLocation, setPendingLocation] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState({ city: '', country: '' });\r\n  const mapRef = useRef();\r\n  const [showPhonePrompt, setShowPhonePrompt] = useState(false);\r\n\r\n  const fetchCityFromCoordinates = async (lat, lng) => {\r\n    const apiKey = process.env.REACT_APP_GOOGLE_GEOCODE_API_KEY;\r\n    const url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=${apiKey}`;\r\n    try {\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      if (data.status === 'OK') {\r\n        const result = data.results.find(r =>\r\n          r.types.includes('locality') || r.types.includes('administrative_area_level_2')\r\n        );\r\n        if (result) {\r\n          const cityComp = result.address_components.find(c =>\r\n            c.types.includes('locality') || c.types.includes('administrative_area_level_2')\r\n          );\r\n          return cityComp?.long_name;\r\n        }\r\n      } else {\r\n        console.warn('🧭 Geocode error:', data.status, data.error_message);\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Failed to fetch city name:', error);\r\n    }\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (location) return;\r\n    navigator.geolocation.getCurrentPosition(\r\n      async (pos) => {\r\n        const { latitude, longitude } = pos.coords;\r\n        const city = await fetchCityFromCoordinates(latitude, longitude);\r\n        setLocation({\r\n          city: city || 'Unknown',\r\n          country: 'India',\r\n          coordinates: { lat: latitude, lng: longitude },\r\n          isUserLocation: true\r\n        });\r\n      },\r\n      (err) => {\r\n        console.warn(\"⚠️ Geolocation failed. Using fallback location:\", err.message);\r\n        setLocation({\r\n          city: 'New Delhi',\r\n          country: 'India',\r\n          coordinates: { lat: 28.6139, lng: 77.209 },\r\n          isUserLocation: false\r\n        });\r\n      },\r\n      { enableHighAccuracy: true, timeout: 10000, maximumAge: 0 }\r\n    );\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    if (pendingLocation) {\r\n      setLocation(pendingLocation);\r\n      setPendingLocation(null);\r\n    }\r\n  }, [pendingLocation]);\r\n\r\n  useEffect(() => {\r\n    if (user && (!user.phone_number || !user.is_phone_verified)) {\r\n      setShowPhonePrompt(true);\r\n    } else {\r\n      setShowPhonePrompt(false); // ✅ Close the modal on logout or if verified\r\n    }\r\n  }, [user]);\r\n  \r\n  \r\n\r\n  const handleMapResult = useCallback(result => {\r\n    if (result.success) toast.success(result.message);\r\n    else toast.error(result.message);\r\n    if (result.mapRef) {\r\n      mapRef.current = result.mapRef;\r\n    }\r\n  }, []);\r\n\r\n  const handleSearch = e => {\r\n    e.preventDefault();\r\n    const city = searchQuery.city.trim();\r\n    const country = searchQuery.country.trim();\r\n    if (!city && !country) {\r\n      toast.error('Please enter a city or country');\r\n      return;\r\n    }\r\n    const newLoc = { city, country };\r\n    if (\r\n      newLoc.city.toLowerCase() === location?.city?.toLowerCase() &&\r\n      newLoc.country.toLowerCase() === location?.country?.toLowerCase()\r\n    ) {\r\n      if (mapRef.current?.refocus) {\r\n        mapRef.current.refocus();\r\n        toast.info(`Refocusing on ${newLoc.city || newLoc.country}`);\r\n      } else {\r\n        toast.info('Already showing this location');\r\n      }\r\n    } else {\r\n      setPendingLocation(newLoc);\r\n      toast.info('Searching for location...');\r\n    }\r\n  };\r\n\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.target;\r\n    setSearchQuery(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  if (loading || !location) {\r\n    return <div className=\"loading-screen\">Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <h1>Smart City Dashboard</h1>\r\n      </div>\r\n\r\n      <ToastContainer position=\"top-center\" autoClose={2000} hideProgressBar />\r\n\r\n      <div className=\"auth-controls\">\r\n        <GoogleAuth />\r\n      </div>\r\n\r\n      <form onSubmit={handleSearch} className=\"search-bar\">\r\n        <div className=\"search-container\">\r\n          <div className=\"search-controls\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"city\"\r\n              placeholder=\"City (e.g. Delhi)\"\r\n              value={searchQuery.city}\r\n              onChange={handleInputChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"country\"\r\n              placeholder=\"Country (e.g. India)\"\r\n              value={searchQuery.country}\r\n              onChange={handleInputChange}\r\n            />\r\n            <button type=\"submit\" className=\"search-button\">\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      <EmergencyBanner city={location.city} />\r\n\r\n      <Map\r\n        city={location.city}\r\n        country={location.country}\r\n        coordinates={location.coordinates}\r\n        isUserLocation={location.isUserLocation}\r\n        onResult={handleMapResult}\r\n        ref={mapRef}\r\n        mapRef={mapRef}\r\n      />\r\n\r\n      {showPhonePrompt && (\r\n        <PhoneVerificationModal\r\n        isOpen={showPhonePrompt}\r\n        onClose={() => setShowPhonePrompt(false)}\r\n        onVerified={async () => {\r\n          await refreshUser(); // ✅ pull latest phone_verified flag\r\n          setShowPhonePrompt(false); // ✅ hide modal\r\n          toast.success(\"Phone verified successfully\");\r\n        }}\r\n      />\r\n      \r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}