{"ast":null,"code":"var _jsxFileName = \"C:\\\\MNNIT\\\\SEM2\\\\programmingLab2\\\\Project\\\\smartcity\\\\smartCity\\\\frontend\\\\src\\\\components\\\\Alerts\\\\EmergencyBanner.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../../services/api';\nimport './EmergencyBanner.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log('✅ EmergencyBanner loaded');\nconst EmergencyBanner = () => {\n  _s();\n  const [alerts, setAlerts] = useState([]);\n  const [dismissedIds, setDismissedIds] = useState(new Set());\n  useEffect(() => {\n    let intervalId;\n    const fetchAlerts = async () => {\n      try {\n        const response = await api.get(`/api/alerts/?city=${encodeURIComponent(city)}`);\n        setAlerts(response.data);\n      } catch (err) {\n        console.error('Failed to fetch alerts:', err);\n      }\n    };\n    if (isActive && city) {\n      fetchAlerts(); // initial fetch\n      intervalId = setInterval(fetchAlerts, 30000); // poll every 30s\n    }\n    return () => {\n      if (intervalId) clearInterval(intervalId);\n    };\n  }, [isActive, city]);\n  useEffect(() => {\n    const stored = localStorage.getItem('dismissedAlerts');\n    if (stored) {\n      setDismissedIds(new Set(JSON.parse(stored)));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('dismissedAlerts', JSON.stringify(Array.from(dismissedIds)));\n  }, [dismissedIds]);\n  const dismissAlert = id => {\n    setDismissedIds(prev => new Set(prev).add(id));\n  };\n  if (!alerts || alerts.length === 0) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"emergency-banner-container\",\n    children: alerts.filter(alert => !dismissedIds.has(alert.id)).map(alert => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `emergency-banner ${alert.level}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [alert.title, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), \" \", alert.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dismiss-button\",\n        onClick: () => dismissAlert(alert.id),\n        children: \"\\u2716\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, alert.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(EmergencyBanner, \"b2i7muWRq1dtpUqINBeS+VSTGKk=\");\n_c = EmergencyBanner;\nexport default EmergencyBanner;\nvar _c;\n$RefreshReg$(_c, \"EmergencyBanner\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","console","log","EmergencyBanner","_s","alerts","setAlerts","dismissedIds","setDismissedIds","Set","intervalId","fetchAlerts","response","get","encodeURIComponent","city","data","err","error","isActive","setInterval","clearInterval","stored","localStorage","getItem","JSON","parse","setItem","stringify","Array","from","dismissAlert","id","prev","add","length","className","children","filter","alert","has","map","level","title","fileName","_jsxFileName","lineNumber","columnNumber","message","onClick","_c","$RefreshReg$"],"sources":["C:/MNNIT/SEM2/programmingLab2/Project/smartcity/smartCity/frontend/src/components/Alerts/EmergencyBanner.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport api from '../../services/api';\r\nimport './EmergencyBanner.css';\r\n\r\nconsole.log('✅ EmergencyBanner loaded');\r\n\r\n  const EmergencyBanner = () => {\r\n  const [alerts, setAlerts] = useState([]);\r\n  const [dismissedIds, setDismissedIds] = useState(new Set());\r\n\r\n\r\n  useEffect(() => {\r\n    let intervalId;\r\n  \r\n    const fetchAlerts = async () => {\r\n      try {\r\n        const response = await api.get(`/api/alerts/?city=${encodeURIComponent(city)}`);\r\n        setAlerts(response.data);\r\n      } catch (err) {\r\n        console.error('Failed to fetch alerts:', err);\r\n      }\r\n    };\r\n  \r\n    if (isActive && city) {\r\n      fetchAlerts(); // initial fetch\r\n      intervalId = setInterval(fetchAlerts, 30000); // poll every 30s\r\n    }\r\n  \r\n    return () => {\r\n      if (intervalId) clearInterval(intervalId);\r\n    };\r\n  }, [isActive, city]);\r\n\r\n  useEffect(() => {\r\n    const stored = localStorage.getItem('dismissedAlerts');\r\n    if (stored) {\r\n      setDismissedIds(new Set(JSON.parse(stored)));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('dismissedAlerts', JSON.stringify(Array.from(dismissedIds)));\r\n  }, [dismissedIds]);\r\n\r\n  const dismissAlert = (id) => {\r\n    setDismissedIds(prev => new Set(prev).add(id));\r\n  };  \r\n\r\n  if (!alerts || alerts.length === 0) return null;\r\n\r\n  return (\r\n    <div className=\"emergency-banner-container\">\r\n      {alerts.filter(alert => !dismissedIds.has(alert.id)).map(alert => (\r\n        <div key={alert.id} className={`emergency-banner ${alert.level}`}>\r\n          <div className=\"alert-content\">\r\n            <strong>{alert.title}:</strong> {alert.message}\r\n          </div>\r\n          <button className=\"dismiss-button\" onClick={() => dismissAlert(alert.id)}>✖</button>\r\n        </div>\r\n      ))}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmergencyBanner;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}