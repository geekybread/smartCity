{"ast":null,"code":"var _jsxFileName = \"C:\\\\MNNIT\\\\SEM2\\\\programmingLab2\\\\Project\\\\smartcity\\\\smartCity\\\\frontend\\\\src\\\\components\\\\Auth\\\\GoogleLogin.js\",\n  _s = $RefreshSig$();\n// src/components/Auth/GoogleLogin.js\n\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport axios from 'axios';\nimport { useAuth } from '../../context/AuthContext';\nimport { toast } from 'react-toastify';\nimport './GoogleLogin.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleAuth = () => {\n  _s();\n  const {\n    user,\n    login,\n    logout\n  } = useAuth();\n  const handleSuccess = async credentialResponse => {\n    try {\n      const {\n        data\n      } = await axios.post(`${process.env.REACT_APP_API_BASE_URL}/api/auth/google/`, {\n        id_token: credentialResponse.credential,\n        provider: 'google'\n      }, {\n        withCredentials: true\n      });\n      login(data.key, data.user);\n      toast.success('‚úÖ Logged in successfully!');\n    } catch {\n      toast.error('‚ùå Login failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n    children: !user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"google-auth-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        onSuccess: handleSuccess,\n        onError: () => toast.error('‚ùå Google Login Failed'),\n        ux_mode: \"popup\",\n        theme: \"outline\",\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"google-auth-user-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"user-email\",\n        children: [\"\\uD83D\\uDC64 \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-btn\",\n        onClick: () => {\n          logout();\n          toast.info('üîì Logged out');\n        },\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleAuth, \"da/ilpfZPOv7GDaVnKErnIopDAM=\", false, function () {\n  return [useAuth];\n});\n_c = GoogleAuth;\nexport default GoogleAuth;\nvar _c;\n$RefreshReg$(_c, \"GoogleAuth\");","map":{"version":3,"names":["GoogleOAuthProvider","GoogleLogin","axios","useAuth","toast","jsxDEV","_jsxDEV","GoogleAuth","_s","user","login","logout","handleSuccess","credentialResponse","data","post","process","env","REACT_APP_API_BASE_URL","id_token","credential","provider","withCredentials","key","success","error","clientId","REACT_APP_GOOGLE_CLIENT_ID","children","className","onSuccess","onError","ux_mode","theme","size","fileName","_jsxFileName","lineNumber","columnNumber","email","onClick","info","_c","$RefreshReg$"],"sources":["C:/MNNIT/SEM2/programmingLab2/Project/smartcity/smartCity/frontend/src/components/Auth/GoogleLogin.js"],"sourcesContent":["// src/components/Auth/GoogleLogin.js\r\n\r\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google'\r\nimport axios from 'axios'\r\nimport { useAuth } from '../../context/AuthContext'\r\nimport { toast } from 'react-toastify'\r\nimport './GoogleLogin.css'\r\n\r\nconst GoogleAuth = () => {\r\n  const { user, login, logout } = useAuth()\r\n\r\n  const handleSuccess = async credentialResponse => {\r\n    try {\r\n      const { data } = await axios.post(\r\n        `${process.env.REACT_APP_API_BASE_URL}/api/auth/google/`,\r\n        { id_token: credentialResponse.credential, provider: 'google' },\r\n        { withCredentials: true }\r\n      )\r\n      login(data.key, data.user)\r\n      toast.success('‚úÖ Logged in successfully!')\r\n    } catch {\r\n      toast.error('‚ùå Login failed')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <GoogleOAuthProvider clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}>\r\n      {!user ? (\r\n        <div className=\"google-auth-wrapper\">\r\n          <GoogleLogin\r\n            onSuccess={handleSuccess}\r\n            onError={() => toast.error('‚ùå Google Login Failed')}\r\n            ux_mode=\"popup\"\r\n            theme=\"outline\"\r\n            size=\"large\"\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div className=\"google-auth-user-info\">\r\n          <span className=\"user-email\">üë§ {user.email}</span>\r\n          <button\r\n            className=\"logout-btn\"\r\n            onClick={() => {\r\n              logout()\r\n              toast.info('üîì Logged out')\r\n            }}\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n      )}\r\n    </GoogleOAuthProvider>\r\n  )\r\n}\r\n\r\nexport default GoogleAuth\r\n"],"mappings":";;AAAA;;AAEA,SAASA,mBAAmB,EAAEC,WAAW,QAAQ,qBAAqB;AACtE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,2BAA2B;AACnD,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAO,CAAC,GAAGR,OAAO,CAAC,CAAC;EAEzC,MAAMS,aAAa,GAAG,MAAMC,kBAAkB,IAAI;IAChD,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAC/B,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,mBAAmB,EACxD;QAAEC,QAAQ,EAAEN,kBAAkB,CAACO,UAAU;QAAEC,QAAQ,EAAE;MAAS,CAAC,EAC/D;QAAEC,eAAe,EAAE;MAAK,CAC1B,CAAC;MACDZ,KAAK,CAACI,IAAI,CAACS,GAAG,EAAET,IAAI,CAACL,IAAI,CAAC;MAC1BL,KAAK,CAACoB,OAAO,CAAC,2BAA2B,CAAC;IAC5C,CAAC,CAAC,MAAM;MACNpB,KAAK,CAACqB,KAAK,CAAC,gBAAgB,CAAC;IAC/B;EACF,CAAC;EAED,oBACEnB,OAAA,CAACN,mBAAmB;IAAC0B,QAAQ,EAAEV,OAAO,CAACC,GAAG,CAACU,0BAA2B;IAAAC,QAAA,EACnE,CAACnB,IAAI,gBACJH,OAAA;MAAKuB,SAAS,EAAC,qBAAqB;MAAAD,QAAA,eAClCtB,OAAA,CAACL,WAAW;QACV6B,SAAS,EAAElB,aAAc;QACzBmB,OAAO,EAAEA,CAAA,KAAM3B,KAAK,CAACqB,KAAK,CAAC,uBAAuB,CAAE;QACpDO,OAAO,EAAC,OAAO;QACfC,KAAK,EAAC,SAAS;QACfC,IAAI,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,gBAENhC,OAAA;MAAKuB,SAAS,EAAC,uBAAuB;MAAAD,QAAA,gBACpCtB,OAAA;QAAMuB,SAAS,EAAC,YAAY;QAAAD,QAAA,GAAC,eAAG,EAACnB,IAAI,CAAC8B,KAAK;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnDhC,OAAA;QACEuB,SAAS,EAAC,YAAY;QACtBW,OAAO,EAAEA,CAAA,KAAM;UACb7B,MAAM,CAAC,CAAC;UACRP,KAAK,CAACqC,IAAI,CAAC,eAAe,CAAC;QAC7B,CAAE;QAAAb,QAAA,EACH;MAED;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACkB,CAAC;AAE1B,CAAC;AAAA9B,EAAA,CA7CKD,UAAU;EAAA,QACkBJ,OAAO;AAAA;AAAAuC,EAAA,GADnCnC,UAAU;AA+ChB,eAAeA,UAAU;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}