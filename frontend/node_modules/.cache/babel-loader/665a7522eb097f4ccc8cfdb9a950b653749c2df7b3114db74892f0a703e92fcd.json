{"ast":null,"code":"var _jsxFileName = \"C:\\\\MNNIT\\\\SEM2\\\\programmingLab2\\\\Project\\\\smartcity\\\\smartCity\\\\frontend\\\\src\\\\components\\\\Map\\\\index.js\",\n  _s = $RefreshSig$();\n// src/components/Map/index.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../../context/AuthContext';\nimport MapLoader from './MapLoader';\nimport ControlPanel from './ControlPanel';\nimport Sidebar from './Sidebar';\nimport useMapData from './hooks/useMapData';\nimport useAccidentZones from './hooks/useAccidentZones';\nimport useAlerts from './hooks/useAlerts';\nimport './Map.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/_s(/*#__PURE__*/React.forwardRef(_c = _s(function Map({\n  city,\n  country,\n  onResult\n}, ref) {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const {\n    weather,\n    airQuality,\n    feedbacks,\n    markers,\n    fetchData,\n    addFeedback\n  } = useMapData(city, country, user);\n  const {\n    zones: accidentZones\n  } = useAccidentZones(city);\n  const {\n    alerts\n  } = useAlerts(city);\n  const [center, setCenter] = useState(null);\n  const [zoom, setZoom] = useState(city ? 13 : 6);\n  const [showTraffic, setShowTraffic] = useState(false);\n  const [showZones, setShowZones] = useState(false);\n  const [showAlerts, setShowAlerts] = useState(false);\n  const [activeSidebar, setActiveSidebar] = useState(null);\n  const [showFeedbackForm, setShowFeedbackForm] = useState(false);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const currentLocationRef = useRef({\n    city: 'New Delhi',\n    country: 'India'\n  });\n  const mapRef = useRef();\n  const hasAutoCentered = useRef(false);\n\n  // Detect user's location on initial load\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(pos => {\n      if (!hasAutoCentered.current) {\n        const userLat = pos.coords.latitude;\n        const userLng = pos.coords.longitude;\n        console.log(\"📍 User location (first load):\", userLat, userLng);\n        setCenter({\n          lat: userLat,\n          lng: userLng\n        });\n        setZoom(13);\n        hasAutoCentered.current = true;\n      }\n    }, err => {\n      if (!hasAutoCentered.current) {\n        console.warn(\"⚠️ Geolocation failed, falling back:\", err.message);\n        setCenter({\n          lat: 28.6139,\n          lng: 77.209\n        }); // New Delhi\n        setZoom(13);\n        hasAutoCentered.current = true;\n      }\n    });\n  }, []);\n\n  // Sync location & reset sidebars\n  useEffect(() => {\n    currentLocationRef.current = {\n      city,\n      country\n    };\n    setActiveSidebar(null);\n    setShowZones(false);\n    setShowAlerts(false);\n    setShowTraffic(false);\n    setShowFeedbackForm(false);\n  }, [city, country]);\n\n  // Toggle sidebar sections\n  const onToggle = name => {\n    const next = activeSidebar === name ? null : name;\n    setActiveSidebar(next);\n    setShowTraffic(next === 'traffic');\n    setShowZones(next === 'zones');\n    setShowAlerts(next === 'alerts');\n    setShowFeedbackForm(false);\n  };\n\n  // Open feedback form manually\n  const handleReportClick = () => {\n    if (!user) return alert('Please login to submit feedback');\n    const c = mapRef.current.getCenter();\n    setSelectedLocation(`${currentLocationRef.current.city} (${c.lat().toFixed(4)}, ${c.lng().toFixed(4)})`);\n    setShowFeedbackForm(true);\n    setActiveSidebar('feedback');\n  };\n\n  // Submit feedback data\n  const handleFeedbackSubmit = async feedback => {\n    if (!user) return alert('Please login to submit feedback');\n    try {\n      const c = mapRef.current.getCenter();\n      await addFeedback({\n        ...feedback,\n        id: `feedback-${Date.now()}`,\n        location_name: selectedLocation,\n        latitude: c.lat(),\n        longitude: c.lng()\n      });\n      setShowFeedbackForm(false);\n      alert('Thank you for your report!');\n    } catch (err) {\n      console.error(err);\n      alert('Failed to submit feedback');\n    }\n  };\n\n  // Handle feedback marker click\n  const onMarkerClick = id => {\n    const fb = feedbacks.find(f => f.id === id);\n    if (!fb) return;\n    setSelectedLocation(fb.location || fb.location_name);\n    setShowFeedbackForm(true);\n    setActiveSidebar('feedback');\n  };\n\n  // Load map and setup click handler\n  const onLoad = map => {\n    mapRef.current = map;\n    map.addListener('click', e => {\n      if (activeSidebar !== 'feedback') return;\n      const lat = e.latLng.lat();\n      const lng = e.latLng.lng();\n      const label = currentLocationRef.current.city ? `${currentLocationRef.current.city} (${lat.toFixed(4)}, ${lng.toFixed(4)})` : `(${lat.toFixed(4)}, ${lng.toFixed(4)})`;\n      setSelectedLocation(label);\n      setShowFeedbackForm(true);\n    });\n  };\n  const onUnmount = () => {\n    mapRef.current = null;\n  };\n\n  // Fetch data when city changes\n  useEffect(() => {\n    setIsLoading(true);\n    fetchData().then(result => {\n      if (result.error) {\n        onResult === null || onResult === void 0 ? void 0 : onResult({\n          success: false,\n          message: result.message\n        });\n        return;\n      }\n      if (result.center && result.zoom != null) {\n        var _mapRef$current, _mapRef$current2;\n        setCenter(result.center);\n        setZoom(result.zoom);\n        (_mapRef$current = mapRef.current) === null || _mapRef$current === void 0 ? void 0 : _mapRef$current.panTo(result.center);\n        (_mapRef$current2 = mapRef.current) === null || _mapRef$current2 === void 0 ? void 0 : _mapRef$current2.setZoom(result.zoom);\n        onResult === null || onResult === void 0 ? void 0 : onResult({\n          success: true,\n          message: city,\n          mapRef: {\n            refocus: () => {\n              var _mapRef$current3, _mapRef$current4;\n              setCenter(result.center);\n              setZoom(result.zoom);\n              (_mapRef$current3 = mapRef.current) === null || _mapRef$current3 === void 0 ? void 0 : _mapRef$current3.panTo(result.center);\n              (_mapRef$current4 = mapRef.current) === null || _mapRef$current4 === void 0 ? void 0 : _mapRef$current4.setZoom(result.zoom);\n            }\n          }\n        });\n      }\n    }).catch(err => {\n      onResult === null || onResult === void 0 ? void 0 : onResult({\n        success: false,\n        message: 'Unexpected error: ' + err.message\n      });\n    }).finally(() => setIsLoading(false));\n  }, [city, country, fetchData, onResult]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(ControlPanel, {\n      active: activeSidebar,\n      onToggle: onToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `map-container ${activeSidebar ? 'sidebar-open' : ''}`,\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-loading-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), center && /*#__PURE__*/_jsxDEV(MapLoader, {\n        center: center,\n        zoom: zoom,\n        showTraffic: showTraffic,\n        showZones: showZones,\n        showAlerts: showAlerts,\n        accidentZones: accidentZones,\n        alerts: alerts,\n        markers: markers,\n        onLoad: onLoad,\n        onUnmount: onUnmount,\n        onMarkerClick: onMarkerClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      active: activeSidebar,\n      onToggle: onToggle,\n      weather: weather,\n      airQuality: airQuality,\n      city: currentLocationRef.current.city,\n      currentLocation: currentLocationRef.current,\n      showFeedbackForm: showFeedbackForm,\n      selectedLocation: selectedLocation,\n      onReportClick: handleReportClick,\n      onFeedbackSubmit: handleFeedbackSubmit,\n      accidentZones: accidentZones,\n      alerts: alerts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}, \"s7YSNc3wVHAT8pPH5k9L7V/QUaw=\", false, function () {\n  return [useAuth, useMapData, useAccidentZones, useAlerts];\n})), \"s7YSNc3wVHAT8pPH5k9L7V/QUaw=\", false, function () {\n  return [useAuth, useMapData, useAccidentZones, useAlerts];\n});\nvar _c, _c2;\n$RefreshReg$(_c, \"%default%$React.forwardRef\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useAuth","MapLoader","ControlPanel","Sidebar","useMapData","useAccidentZones","useAlerts","jsxDEV","_jsxDEV","_c2","_s","forwardRef","_c","Map","city","country","onResult","ref","user","weather","airQuality","feedbacks","markers","fetchData","addFeedback","zones","accidentZones","alerts","center","setCenter","zoom","setZoom","showTraffic","setShowTraffic","showZones","setShowZones","showAlerts","setShowAlerts","activeSidebar","setActiveSidebar","showFeedbackForm","setShowFeedbackForm","selectedLocation","setSelectedLocation","isLoading","setIsLoading","currentLocationRef","mapRef","hasAutoCentered","navigator","geolocation","getCurrentPosition","pos","current","userLat","coords","latitude","userLng","longitude","console","log","lat","lng","err","warn","message","onToggle","name","next","handleReportClick","alert","c","getCenter","toFixed","handleFeedbackSubmit","feedback","id","Date","now","location_name","error","onMarkerClick","fb","find","f","location","onLoad","map","addListener","e","latLng","label","onUnmount","then","result","success","_mapRef$current","_mapRef$current2","panTo","refocus","_mapRef$current3","_mapRef$current4","catch","finally","className","children","active","fileName","_jsxFileName","lineNumber","columnNumber","currentLocation","onReportClick","onFeedbackSubmit","$RefreshReg$"],"sources":["C:/MNNIT/SEM2/programmingLab2/Project/smartcity/smartCity/frontend/src/components/Map/index.js"],"sourcesContent":["// src/components/Map/index.js\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport MapLoader from './MapLoader';\r\nimport ControlPanel from './ControlPanel';\r\nimport Sidebar from './Sidebar';\r\nimport useMapData from './hooks/useMapData';\r\nimport useAccidentZones from './hooks/useAccidentZones';\r\nimport useAlerts from './hooks/useAlerts';\r\nimport './Map.css';\r\n\r\nexport default React.forwardRef(function Map({ city, country, onResult }, ref) {\r\n  const { user } = useAuth();\r\n  const { weather, airQuality, feedbacks, markers, fetchData, addFeedback } =\r\n    useMapData(city, country, user);\r\n  const { zones: accidentZones } = useAccidentZones(city);\r\n  const { alerts } = useAlerts(city);\r\n\r\n  const [center, setCenter] = useState(null);\r\n  const [zoom, setZoom] = useState(city ? 13 : 6);\r\n  const [showTraffic, setShowTraffic] = useState(false);\r\n  const [showZones, setShowZones] = useState(false);\r\n  const [showAlerts, setShowAlerts] = useState(false);\r\n  const [activeSidebar, setActiveSidebar] = useState(null);\r\n  const [showFeedbackForm, setShowFeedbackForm] = useState(false);\r\n  const [selectedLocation, setSelectedLocation] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const currentLocationRef = useRef({ city: 'New Delhi', country: 'India' });\r\n  const mapRef = useRef();\r\n  const hasAutoCentered = useRef(false);\r\n\r\n\r\n  // Detect user's location on initial load\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(\r\n      (pos) => {\r\n        if (!hasAutoCentered.current) {\r\n          const userLat = pos.coords.latitude;\r\n          const userLng = pos.coords.longitude;\r\n          console.log(\"📍 User location (first load):\", userLat, userLng);\r\n          setCenter({ lat: userLat, lng: userLng });\r\n          setZoom(13);\r\n          hasAutoCentered.current = true;\r\n        }\r\n      },\r\n      (err) => {\r\n        if (!hasAutoCentered.current) {\r\n          console.warn(\"⚠️ Geolocation failed, falling back:\", err.message);\r\n          setCenter({ lat: 28.6139, lng: 77.209 }); // New Delhi\r\n          setZoom(13);\r\n          hasAutoCentered.current = true;\r\n        }\r\n      }\r\n    );\r\n  }, []);\r\n  \r\n\r\n\r\n  // Sync location & reset sidebars\r\n  useEffect(() => {\r\n    currentLocationRef.current = { city, country };\r\n    setActiveSidebar(null);\r\n    setShowZones(false);\r\n    setShowAlerts(false);\r\n    setShowTraffic(false);\r\n    setShowFeedbackForm(false);\r\n  }, [city, country]);\r\n\r\n  // Toggle sidebar sections\r\n  const onToggle = name => {\r\n    const next = activeSidebar === name ? null : name;\r\n    setActiveSidebar(next);\r\n    setShowTraffic(next === 'traffic');\r\n    setShowZones(next === 'zones');\r\n    setShowAlerts(next === 'alerts');\r\n    setShowFeedbackForm(false);\r\n  };\r\n\r\n  // Open feedback form manually\r\n  const handleReportClick = () => {\r\n    if (!user) return alert('Please login to submit feedback');\r\n    const c = mapRef.current.getCenter();\r\n    setSelectedLocation(\r\n      `${currentLocationRef.current.city} (${c.lat().toFixed(4)}, ${c.lng().toFixed(4)})`\r\n    );\r\n    setShowFeedbackForm(true);\r\n    setActiveSidebar('feedback');\r\n  };\r\n\r\n  // Submit feedback data\r\n  const handleFeedbackSubmit = async feedback => {\r\n    if (!user) return alert('Please login to submit feedback');\r\n    try {\r\n      const c = mapRef.current.getCenter();\r\n      await addFeedback({\r\n        ...feedback,\r\n        id: `feedback-${Date.now()}`,\r\n        location_name: selectedLocation,\r\n        latitude: c.lat(),\r\n        longitude: c.lng(),\r\n      });\r\n      setShowFeedbackForm(false);\r\n      alert('Thank you for your report!');\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Failed to submit feedback');\r\n    }\r\n  };\r\n\r\n  // Handle feedback marker click\r\n  const onMarkerClick = id => {\r\n    const fb = feedbacks.find(f => f.id === id);\r\n    if (!fb) return;\r\n    setSelectedLocation(fb.location || fb.location_name);\r\n    setShowFeedbackForm(true);\r\n    setActiveSidebar('feedback');\r\n  };\r\n\r\n  // Load map and setup click handler\r\n  const onLoad = map => {\r\n    mapRef.current = map;\r\n\r\n    map.addListener('click', e => {\r\n      if (activeSidebar !== 'feedback') return;\r\n\r\n      const lat = e.latLng.lat();\r\n      const lng = e.latLng.lng();\r\n      const label = currentLocationRef.current.city\r\n        ? `${currentLocationRef.current.city} (${lat.toFixed(4)}, ${lng.toFixed(4)})`\r\n        : `(${lat.toFixed(4)}, ${lng.toFixed(4)})`;\r\n\r\n      setSelectedLocation(label);\r\n      setShowFeedbackForm(true);\r\n    });\r\n  };\r\n\r\n  const onUnmount = () => {\r\n    mapRef.current = null;\r\n  };\r\n\r\n  // Fetch data when city changes\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    fetchData()\r\n      .then(result => {\r\n        if (result.error) {\r\n          onResult?.({ success: false, message: result.message });\r\n          return;\r\n        }\r\n        if (result.center && result.zoom != null) {\r\n          setCenter(result.center);\r\n          setZoom(result.zoom);\r\n          mapRef.current?.panTo(result.center);\r\n          mapRef.current?.setZoom(result.zoom);\r\n          onResult?.({\r\n            success: true,\r\n            message: city,\r\n            mapRef: {\r\n              refocus: () => {\r\n                setCenter(result.center);\r\n                setZoom(result.zoom);\r\n                mapRef.current?.panTo(result.center);\r\n                mapRef.current?.setZoom(result.zoom);\r\n              }\r\n            }\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        onResult?.({ success: false, message: 'Unexpected error: ' + err.message });\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  }, [city, country, fetchData, onResult]);\r\n\r\n  return (\r\n    <div className=\"map-page-container\">\r\n      <ControlPanel active={activeSidebar} onToggle={onToggle} />\r\n\r\n      <div className={`map-container ${activeSidebar ? 'sidebar-open' : ''}`}>\r\n        {isLoading && (\r\n          <div className=\"map-loading-overlay\"><div className=\"spinner\" /></div>\r\n        )}\r\n        {center && (\r\n          <MapLoader\r\n            center={center}\r\n            zoom={zoom}\r\n            showTraffic={showTraffic}\r\n            showZones={showZones}\r\n            showAlerts={showAlerts}\r\n            accidentZones={accidentZones}\r\n            alerts={alerts}\r\n            markers={markers}\r\n            onLoad={onLoad}\r\n            onUnmount={onUnmount}\r\n            onMarkerClick={onMarkerClick}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <Sidebar\r\n        active={activeSidebar}\r\n        onToggle={onToggle}\r\n        weather={weather}\r\n        airQuality={airQuality}\r\n        city={currentLocationRef.current.city}\r\n        currentLocation={currentLocationRef.current}\r\n        showFeedbackForm={showFeedbackForm}\r\n        selectedLocation={selectedLocation}\r\n        onReportClick={handleReportClick}\r\n        onFeedbackSubmit={handleFeedbackSubmit}\r\n        accidentZones={accidentZones}\r\n        alerts={alerts}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}