{"ast":null,"code":"var _jsxFileName = \"C:\\\\MNNIT\\\\SEM2\\\\programmingLab2\\\\Project\\\\smartcity\\\\smartCity\\\\frontend\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { GoogleMap, useLoadScript, TrafficLayer } from '@react-google-maps/api';\nimport { getWeatherData, getCityCoordinates } from '../services/weather';\nimport { GOOGLE_MAPS_CONFIG } from './configs/maps';\nimport './Map.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = ({\n  city,\n  country,\n  onError\n}) => {\n  _s();\n  var _weather$main, _weather$weather, _weather$weather$;\n  const [weather, setWeather] = useState({\n    main: {\n      temp: 'N/A'\n    },\n    weather: [{\n      description: 'N/A'\n    }]\n  });\n  const [center, setCenter] = useState({\n    lat: 28.6139,\n    lng: 77.2090\n  });\n  const [map, setMap] = useState(null);\n  const [showTraffic, setShowTraffic] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Initialize with useMemo to prevent infinite reloads\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: GOOGLE_MAPS_CONFIG.apiKey,\n    libraries: GOOGLE_MAPS_CONFIG.libraries\n  });\n  useEffect(() => {\n    if (!isLoaded) return;\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        if (!city && !country) return;\n        const {\n          lat,\n          lon\n        } = await getCityCoordinates(city, country);\n        setCenter({\n          lat,\n          lng: lon\n        });\n        const weatherData = await getWeatherData(lat, lon);\n        setWeather(weatherData);\n      } catch (error) {\n        console.error('Error:', error);\n        if (onError) onError({\n          type: 'error',\n          message: error.message.includes('not found') ? `${country ? country + ' ' : ''}${city || 'Location'} not found` : 'Failed to load data'\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    const timer = setTimeout(fetchData, 500);\n    return () => clearTimeout(timer);\n  }, [city, country, isLoaded, onError]);\n  const onLoad = useCallback(map => {\n    setMap(map);\n  }, []);\n  if (loadError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error loading maps\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 25\n  }, this);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading Maps...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: [/*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: {\n          width: '100%',\n          height: '100%'\n        },\n        zoom: 13,\n        center: center,\n        onLoad: onLoad,\n        children: showTraffic && /*#__PURE__*/_jsxDEV(TrafficLayer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowTraffic(!showTraffic),\n        className: \"traffic-toggle\",\n        disabled: isLoading,\n        children: showTraffic ? 'Hide Traffic' : 'Show Traffic'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-widget\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [((_weather$main = weather.main) === null || _weather$main === void 0 ? void 0 : _weather$main.temp) || 'N/A', \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: ((_weather$weather = weather.weather) === null || _weather$weather === void 0 ? void 0 : (_weather$weather$ = _weather$weather[0]) === null || _weather$weather$ === void 0 ? void 0 : _weather$weather$.description) || 'N/A'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"FVJk/YftPNFhhyu7L55WNF7NHus=\", false, function () {\n  return [useLoadScript];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","GoogleMap","useLoadScript","TrafficLayer","getWeatherData","getCityCoordinates","GOOGLE_MAPS_CONFIG","jsxDEV","_jsxDEV","Map","city","country","onError","_s","_weather$main","_weather$weather","_weather$weather$","weather","setWeather","main","temp","description","center","setCenter","lat","lng","map","setMap","showTraffic","setShowTraffic","isLoading","setIsLoading","isLoaded","loadError","googleMapsApiKey","apiKey","libraries","fetchData","lon","weatherData","error","console","type","message","includes","timer","setTimeout","clearTimeout","onLoad","children","fileName","_jsxFileName","lineNumber","columnNumber","className","mapContainerStyle","width","height","zoom","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/MNNIT/SEM2/programmingLab2/Project/smartcity/smartCity/frontend/src/components/Map.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { GoogleMap, useLoadScript, TrafficLayer } from '@react-google-maps/api';\r\nimport { getWeatherData, getCityCoordinates } from '../services/weather';\r\nimport { GOOGLE_MAPS_CONFIG } from './configs/maps';\r\nimport './Map.css';\r\n\r\nconst Map = ({ city, country, onError }) => {\r\n  const [weather, setWeather] = useState({\r\n    main: { temp: 'N/A' },\r\n    weather: [{ description: 'N/A' }],\r\n  });\r\n  const [center, setCenter] = useState({\r\n    lat: 28.6139,\r\n    lng: 77.2090,\r\n  });\r\n  const [map, setMap] = useState(null);\r\n  const [showTraffic, setShowTraffic] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // Initialize with useMemo to prevent infinite reloads\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: GOOGLE_MAPS_CONFIG.apiKey,\r\n    libraries: GOOGLE_MAPS_CONFIG.libraries,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!isLoaded) return;\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        \r\n        if (!city && !country) return;\r\n\r\n        const { lat, lon } = await getCityCoordinates(city, country);\r\n        setCenter({ lat, lng: lon });\r\n\r\n        const weatherData = await getWeatherData(lat, lon);\r\n        setWeather(weatherData);\r\n\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        if (onError) onError({ \r\n          type: 'error', \r\n          message: error.message.includes('not found') \r\n            ? `${country ? country + ' ' : ''}${city || 'Location'} not found` \r\n            : 'Failed to load data'\r\n        });\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    const timer = setTimeout(fetchData, 500);\r\n    return () => clearTimeout(timer);\r\n  }, [city, country, isLoaded, onError]);\r\n\r\n  const onLoad = useCallback((map) => {\r\n    setMap(map);\r\n  }, []);\r\n\r\n  if (loadError) return <div>Error loading maps</div>;\r\n  if (!isLoaded) return <div>Loading Maps...</div>;\r\n\r\n  return (\r\n    <div className=\"map-page-container\">\r\n      <div className=\"map-container\">\r\n        <GoogleMap\r\n          mapContainerStyle={{ width: '100%', height: '100%' }}\r\n          zoom={13}\r\n          center={center}\r\n          onLoad={onLoad}\r\n        >\r\n          {showTraffic && <TrafficLayer />}\r\n        </GoogleMap>\r\n        <button\r\n          onClick={() => setShowTraffic(!showTraffic)}\r\n          className=\"traffic-toggle\"\r\n          disabled={isLoading}\r\n        >\r\n          {showTraffic ? 'Hide Traffic' : 'Show Traffic'}\r\n        </button>\r\n      </div>\r\n      <div className=\"weather-widget\">\r\n        <h2>Weather</h2>\r\n        <p>{weather.main?.temp || 'N/A'}Â°C</p>\r\n        <p>{weather.weather?.[0]?.description || 'N/A'}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}