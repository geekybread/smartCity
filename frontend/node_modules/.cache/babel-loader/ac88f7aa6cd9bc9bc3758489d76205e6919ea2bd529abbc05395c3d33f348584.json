{"ast":null,"code":"export const getCountryCapital = async countryName => {\n  try {\n    var _data$, _data$$capital;\n    const response = await fetch(`https://restcountries.com/v3.1/name/${encodeURIComponent(countryName)}`);\n    if (!response.ok) {\n      throw new Error(`Country not found (HTTP ${response.status})`);\n    }\n    const data = await response.json();\n    if (!((_data$ = data[0]) !== null && _data$ !== void 0 && (_data$$capital = _data$.capital) !== null && _data$$capital !== void 0 && _data$$capital[0])) {\n      throw new Error('Capital information not available');\n    }\n    return data[0].capital[0];\n  } catch (error) {\n    console.error('Error in getCountryCapital:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["getCountryCapital","countryName","_data$","_data$$capital","response","fetch","encodeURIComponent","ok","Error","status","data","json","capital","error","console"],"sources":["C:/MNNIT/SEM2/programmingLab2/Project/smartcity/smartCity/frontend/src/services/countryData.js"],"sourcesContent":["export const getCountryCapital = async (countryName) => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://restcountries.com/v3.1/name/${encodeURIComponent(countryName)}`\r\n      );\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Country not found (HTTP ${response.status})`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (!data[0]?.capital?.[0]) {\r\n        throw new Error('Capital information not available');\r\n      }\r\n      \r\n      return data[0].capital[0];\r\n    } catch (error) {\r\n      console.error('Error in getCountryCapital:', error);\r\n      throw error;\r\n    }\r\n  };"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAG,MAAOC,WAAW,IAAK;EACpD,IAAI;IAAA,IAAAC,MAAA,EAAAC,cAAA;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,uCAAuCC,kBAAkB,CAACL,WAAW,CAAC,EACxE,CAAC;IAED,IAAI,CAACG,QAAQ,CAACG,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2BJ,QAAQ,CAACK,MAAM,GAAG,CAAC;IAChE;IAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAElC,IAAI,GAAAT,MAAA,GAACQ,IAAI,CAAC,CAAC,CAAC,cAAAR,MAAA,gBAAAC,cAAA,GAAPD,MAAA,CAASU,OAAO,cAAAT,cAAA,eAAhBA,cAAA,CAAmB,CAAC,CAAC,GAAE;MAC1B,MAAM,IAAIK,KAAK,CAAC,mCAAmC,CAAC;IACtD;IAEA,OAAOE,IAAI,CAAC,CAAC,CAAC,CAACE,OAAO,CAAC,CAAC,CAAC;EAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}