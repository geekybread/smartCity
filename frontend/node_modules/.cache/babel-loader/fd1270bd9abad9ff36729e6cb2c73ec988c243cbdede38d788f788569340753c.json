{"ast":null,"code":"var _jsxFileName = \"C:\\\\MNNIT\\\\SEM2\\\\programmingLab2\\\\Project\\\\smartcity\\\\smartCity\\\\frontend\\\\src\\\\components\\\\Map\\\\MapLoader.js\",\n  _s = $RefreshSig$();\n// src/components/Map/MapLoader.js\nimport React from 'react';\nimport { GoogleMap, useLoadScript, TrafficLayer, Polygon, Marker } from '@react-google-maps/api';\nimport { GOOGLE_MAPS_CONFIG } from './configs/maps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MapLoader({\n  center,\n  zoom,\n  showTraffic,\n  showZones,\n  showAlerts,\n  accidentZones,\n  alerts,\n  onLoad,\n  onUnmount\n}) {\n  _s();\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: GOOGLE_MAPS_CONFIG.apiKey,\n    libraries: [\n    // spread any existing libs from your config, then add drawing & places\n    ...GOOGLE_MAPS_CONFIG.libraries, 'drawing', 'places']\n  });\n  if (loadError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-error\",\n    children: \"Error loading map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 25\n  }, this);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-loading\",\n    children: \"Loading Map\\u2026\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: {\n      width: '100%',\n      height: '100%'\n    },\n    center: center,\n    zoom: zoom,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    options: {\n      disableDefaultUI: false,\n      gestureHandling: 'greedy',\n      zoomControl: true,\n      mapTypeControl: true,\n      streetViewControl: true,\n      fullscreenControl: true,\n      styles: [{\n        featureType: 'poi',\n        elementType: 'labels',\n        stylers: [{\n          visibility: 'off'\n        }]\n      }]\n    },\n    children: [showTraffic && /*#__PURE__*/_jsxDEV(TrafficLayer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 23\n    }, this), showZones && accidentZones.map(z => {\n      const path = (z.polygon || []).map(p => ({\n        lat: Number(p[0]),\n        lng: Number(p[1])\n      })).filter(pt => !isNaN(pt.lat) && !isNaN(pt.lng));\n      return path.length ? /*#__PURE__*/_jsxDEV(Polygon, {\n        paths: path,\n        options: {\n          fillColor: 'red',\n          fillOpacity: 0.3,\n          strokeColor: 'red',\n          strokeOpacity: 0.8\n        }\n      }, z.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this) : null;\n    }), showAlerts && alerts.map(a => {\n      const lat = parseFloat(a.latitude);\n      const lng = parseFloat(a.longitude);\n      if (isNaN(lat) || isNaN(lng)) return null;\n      return {\n        id: a.id,\n        position: {\n          lat,\n          lng\n        },\n        title: a.message\n      };\n    }).filter(m => m).map(m => /*#__PURE__*/_jsxDEV(Marker, {\n      position: m.position,\n      title: m.title,\n      icon: \"https://maps.google.com/mapfiles/ms/icons/yellow-dot.png\"\n    }, m.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(MapLoader, \"Cye17iwlLw61yP2k5hqy29yMy+o=\", false, function () {\n  return [useLoadScript];\n});\n_c = MapLoader;\nvar _c;\n$RefreshReg$(_c, \"MapLoader\");","map":{"version":3,"names":["React","GoogleMap","useLoadScript","TrafficLayer","Polygon","Marker","GOOGLE_MAPS_CONFIG","jsxDEV","_jsxDEV","MapLoader","center","zoom","showTraffic","showZones","showAlerts","accidentZones","alerts","onLoad","onUnmount","_s","isLoaded","loadError","googleMapsApiKey","apiKey","libraries","className","children","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","width","height","options","disableDefaultUI","gestureHandling","zoomControl","mapTypeControl","streetViewControl","fullscreenControl","styles","featureType","elementType","stylers","visibility","map","z","path","polygon","p","lat","Number","lng","filter","pt","isNaN","length","paths","fillColor","fillOpacity","strokeColor","strokeOpacity","id","a","parseFloat","latitude","longitude","position","title","message","m","icon","_c","$RefreshReg$"],"sources":["C:/MNNIT/SEM2/programmingLab2/Project/smartcity/smartCity/frontend/src/components/Map/MapLoader.js"],"sourcesContent":["// src/components/Map/MapLoader.js\r\nimport React from 'react'\r\nimport {\r\n  GoogleMap,\r\n  useLoadScript,\r\n  TrafficLayer,\r\n  Polygon,\r\n  Marker\r\n} from '@react-google-maps/api'\r\nimport { GOOGLE_MAPS_CONFIG } from './configs/maps'\r\n\r\nexport default function MapLoader({\r\n  center,\r\n  zoom,\r\n  showTraffic,\r\n  showZones,\r\n  showAlerts,\r\n  accidentZones,\r\n  alerts,\r\n  onLoad,\r\n  onUnmount\r\n}) {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: GOOGLE_MAPS_CONFIG.apiKey,\r\n    libraries: [\r\n      // spread any existing libs from your config, then add drawing & places\r\n      ...GOOGLE_MAPS_CONFIG.libraries,\r\n      'drawing',\r\n      'places'\r\n    ]\r\n  })\r\n\r\n  if (loadError) return <div className=\"map-error\">Error loading map</div>\r\n  if (!isLoaded) return <div className=\"map-loading\">Loading Mapâ€¦</div>\r\n\r\n  return (\r\n    <GoogleMap\r\n      mapContainerStyle={{ width: '100%', height: '100%' }}\r\n      center={center}\r\n      zoom={zoom}\r\n      onLoad={onLoad}\r\n      onUnmount={onUnmount}\r\n      options={{\r\n        disableDefaultUI: false,\r\n        gestureHandling: 'greedy',\r\n        zoomControl: true,\r\n        mapTypeControl: true,\r\n        streetViewControl: true,\r\n        fullscreenControl: true,\r\n        styles: [\r\n          { featureType: 'poi', elementType: 'labels', stylers: [{ visibility: 'off' }] }\r\n        ]\r\n      }}\r\n    >\r\n      {showTraffic && <TrafficLayer />}\r\n\r\n      {showZones &&\r\n        accidentZones.map(z => {\r\n          const path = (z.polygon || [])\r\n            .map(p => ({\r\n              lat: Number(p[0]),\r\n              lng: Number(p[1])\r\n            }))\r\n            .filter(pt => !isNaN(pt.lat) && !isNaN(pt.lng))\r\n          return path.length ? (\r\n            <Polygon\r\n              key={z.id}\r\n              paths={path}\r\n              options={{\r\n                fillColor: 'red',\r\n                fillOpacity: 0.3,\r\n                strokeColor: 'red',\r\n                strokeOpacity: 0.8\r\n              }}\r\n            />\r\n          ) : null\r\n        })}\r\n\r\n      {showAlerts &&\r\n        alerts\r\n          .map(a => {\r\n            const lat = parseFloat(a.latitude)\r\n            const lng = parseFloat(a.longitude)\r\n            if (isNaN(lat) || isNaN(lng)) return null\r\n            return { id: a.id, position: { lat, lng }, title: a.message }\r\n          })\r\n          .filter(m => m)\r\n          .map(m => (\r\n            <Marker\r\n              key={m.id}\r\n              position={m.position}\r\n              title={m.title}\r\n              icon=\"https://maps.google.com/mapfiles/ms/icons/yellow-dot.png\"\r\n            />\r\n          ))}\r\n    </GoogleMap>\r\n  )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}