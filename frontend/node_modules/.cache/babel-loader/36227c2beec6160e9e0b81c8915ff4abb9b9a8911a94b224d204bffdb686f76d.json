{"ast":null,"code":"var _jsxFileName = \"C:\\\\MNNIT\\\\SEM2\\\\programmingLab2\\\\Project\\\\smartcity\\\\smartCity\\\\frontend\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { GoogleMap, useLoadScript, TrafficLayer } from '@react-google-maps/api';\nimport { getWeatherData, getCityCoordinates, getAirQualityData } from '../services/weather';\nimport { GOOGLE_MAPS_CONFIG } from './configs/maps';\nimport './Map.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = ({\n  city,\n  country,\n  onResult\n}) => {\n  _s();\n  // ... (keep all existing state declarations)\n\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: GOOGLE_MAPS_CONFIG.apiKey,\n    libraries: GOOGLE_MAPS_CONFIG.libraries\n  });\n\n  // Handle map resize when sidebar toggles\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (mapRef.current) {\n        window.google.maps.event.trigger(mapRef.current, 'resize');\n        mapRef.current.panTo(center);\n      }\n    }, 350); // Match CSS transition duration\n    return () => clearTimeout(timer);\n  }, [activeSidebar, center]);\n  const onLoad = useCallback(map => {\n    mapRef.current = map;\n    setMap(map);\n    // Initial resize to ensure proper rendering\n    setTimeout(() => {\n      if (mapRef.current) {\n        window.google.maps.event.trigger(mapRef.current, 'resize');\n        mapRef.current.panTo(center);\n      }\n    }, 100);\n  }, [center]);\n  const toggleSidebar = sidebarName => {\n    const newActiveSidebar = activeSidebar === sidebarName ? null : sidebarName;\n    setActiveSidebar(newActiveSidebar);\n    setShowTraffic(newActiveSidebar === 'traffic');\n  };\n\n  // ... (keep all other existing functions)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: {\n          width: '100%',\n          height: '100%',\n          marginRight: activeSidebar ? '300px' : '0',\n          transition: 'margin-right 0.35s ease'\n        },\n        zoom: 13,\n        center: center,\n        onLoad: onLoad,\n        options: {\n          gestureHandling: 'greedy',\n          disableDefaultUI: false,\n          zoomControl: true,\n          mapTypeControl: true,\n          scaleControl: true,\n          streetViewControl: true,\n          rotateControl: true,\n          fullscreenControl: true,\n          styles: [{\n            featureType: \"poi\",\n            elementType: \"labels\",\n            stylers: [{\n              visibility: \"off\"\n            }]\n          }]\n        },\n        children: showTraffic && /*#__PURE__*/_jsxDEV(TrafficLayer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `right-sidebar ${activeSidebar ? 'active' : ''}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"tc2xMgolyPODIf0c46Fne3aLWqY=\", false, function () {\n  return [useLoadScript];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","GoogleMap","useLoadScript","TrafficLayer","getWeatherData","getCityCoordinates","getAirQualityData","GOOGLE_MAPS_CONFIG","jsxDEV","_jsxDEV","Map","city","country","onResult","_s","isLoaded","loadError","googleMapsApiKey","apiKey","libraries","timer","setTimeout","mapRef","current","window","google","maps","event","trigger","panTo","center","clearTimeout","activeSidebar","onLoad","map","setMap","toggleSidebar","sidebarName","newActiveSidebar","setActiveSidebar","setShowTraffic","className","children","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","width","height","marginRight","transition","zoom","options","gestureHandling","disableDefaultUI","zoomControl","mapTypeControl","scaleControl","streetViewControl","rotateControl","fullscreenControl","styles","featureType","elementType","stylers","visibility","showTraffic","_c","$RefreshReg$"],"sources":["C:/MNNIT/SEM2/programmingLab2/Project/smartcity/smartCity/frontend/src/components/Map.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { GoogleMap, useLoadScript, TrafficLayer } from '@react-google-maps/api';\r\nimport { getWeatherData, getCityCoordinates, getAirQualityData } from '../services/weather';\r\nimport { GOOGLE_MAPS_CONFIG } from './configs/maps';\r\nimport './Map.css';\r\n\r\nconst Map = ({ city, country, onResult }) => {\r\n  // ... (keep all existing state declarations)\r\n\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: GOOGLE_MAPS_CONFIG.apiKey,\r\n    libraries: GOOGLE_MAPS_CONFIG.libraries,\r\n  });\r\n\r\n  // Handle map resize when sidebar toggles\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      if (mapRef.current) {\r\n        window.google.maps.event.trigger(mapRef.current, 'resize');\r\n        mapRef.current.panTo(center);\r\n      }\r\n    }, 350); // Match CSS transition duration\r\n    return () => clearTimeout(timer);\r\n  }, [activeSidebar, center]);\r\n\r\n  const onLoad = useCallback((map) => {\r\n    mapRef.current = map;\r\n    setMap(map);\r\n    // Initial resize to ensure proper rendering\r\n    setTimeout(() => {\r\n      if (mapRef.current) {\r\n        window.google.maps.event.trigger(mapRef.current, 'resize');\r\n        mapRef.current.panTo(center);\r\n      }\r\n    }, 100);\r\n  }, [center]);\r\n\r\n  const toggleSidebar = (sidebarName) => {\r\n    const newActiveSidebar = activeSidebar === sidebarName ? null : sidebarName;\r\n    setActiveSidebar(newActiveSidebar);\r\n    setShowTraffic(newActiveSidebar === 'traffic');\r\n  };\r\n\r\n  // ... (keep all other existing functions)\r\n\r\n  return (\r\n    <div className=\"map-page-container\">\r\n      <div className=\"left-panel\">\r\n        {/* ... (keep left panel controls) */}\r\n      </div>\r\n\r\n      {/* Main map container */}\r\n      <div className=\"map-container\">\r\n        <GoogleMap\r\n          mapContainerStyle={{\r\n            width: '100%',\r\n            height: '100%',\r\n            marginRight: activeSidebar ? '300px' : '0',\r\n            transition: 'margin-right 0.35s ease'\r\n          }}\r\n          zoom={13}\r\n          center={center}\r\n          onLoad={onLoad}\r\n          options={{\r\n            gestureHandling: 'greedy',\r\n            disableDefaultUI: false,\r\n            zoomControl: true,\r\n            mapTypeControl: true,\r\n            scaleControl: true,\r\n            streetViewControl: true,\r\n            rotateControl: true,\r\n            fullscreenControl: true,\r\n            styles: [\r\n              {\r\n                featureType: \"poi\",\r\n                elementType: \"labels\",\r\n                stylers: [{ visibility: \"off\" }]\r\n              }\r\n            ]\r\n          }}\r\n        >\r\n          {showTraffic && <TrafficLayer />}\r\n        </GoogleMap>\r\n      </div>\r\n\r\n      {/* Right sidebar */}\r\n      <div className={`right-sidebar ${activeSidebar ? 'active' : ''}`}>\r\n        {/* ... (keep sidebar content) */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}