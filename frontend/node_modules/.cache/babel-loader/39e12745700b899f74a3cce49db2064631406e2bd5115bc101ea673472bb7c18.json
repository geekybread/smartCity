{"ast":null,"code":"var _jsxFileName = \"C:\\\\MNNIT\\\\SEM2\\\\programmingLab2\\\\Project\\\\project_final\\\\frontend\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, useLoadScript, DirectionsRenderer } from '@react-google-maps/api';\nimport { getTrafficDirections } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapContainerStyle = {\n  width: '100%',\n  height: '400px'\n};\nconst center = {\n  lat: 40.7128,\n  // Default to NYC\n  lng: -74.0060\n};\nconst Map = () => {\n  _s();\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  });\n  const [directions, setDirections] = useState(null);\n  useEffect(() => {\n    // Fetch traffic directions\n    const origin = 'Times Square, New York';\n    const destination = 'Central Park, New York';\n    getTrafficDirections(origin, destination).then(data => {\n      if (data.routes.length > 0) {\n        setDirections(data);\n      }\n    });\n  }, []);\n  if (loadError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error loading maps\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 25\n  }, this);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading Maps...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: mapContainerStyle,\n    zoom: 12,\n    center: center,\n    children: directions && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n      directions: directions,\n      options: {\n        polylineOptions: {\n          strokeColor: '#FF0000',\n          // Red for traffic\n          strokeOpacity: 0.8,\n          strokeWeight: 5\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"7tKaS0FBH6uyoSbRzdU6DVfQUq8=\", false, function () {\n  return [useLoadScript];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","useLoadScript","DirectionsRenderer","getTrafficDirections","jsxDEV","_jsxDEV","mapContainerStyle","width","height","center","lat","lng","Map","_s","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","directions","setDirections","origin","destination","then","data","routes","length","children","fileName","_jsxFileName","lineNumber","columnNumber","zoom","options","polylineOptions","strokeColor","strokeOpacity","strokeWeight","_c","$RefreshReg$"],"sources":["C:/MNNIT/SEM2/programmingLab2/Project/project_final/frontend/src/components/Map.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { GoogleMap, useLoadScript, DirectionsRenderer } from '@react-google-maps/api';\r\nimport { getTrafficDirections } from '../services/api';\r\n\r\nconst mapContainerStyle = {\r\n  width: '100%',\r\n  height: '400px',\r\n};\r\n\r\nconst center = {\r\n  lat: 40.7128,  // Default to NYC\r\n  lng: -74.0060,\r\n};\r\n\r\nconst Map = () => {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n  });\r\n\r\n  const [directions, setDirections] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch traffic directions\r\n    const origin = 'Times Square, New York';\r\n    const destination = 'Central Park, New York';\r\n    getTrafficDirections(origin, destination).then(data => {\r\n      if (data.routes.length > 0) {\r\n        setDirections(data);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  if (loadError) return <div>Error loading maps</div>;\r\n  if (!isLoaded) return <div>Loading Maps...</div>;\r\n\r\n  return (\r\n    <GoogleMap\r\n      mapContainerStyle={mapContainerStyle}\r\n      zoom={12}\r\n      center={center}\r\n    >\r\n      {directions && (\r\n        <DirectionsRenderer\r\n          directions={directions}\r\n          options={{\r\n            polylineOptions: {\r\n              strokeColor: '#FF0000',  // Red for traffic\r\n              strokeOpacity: 0.8,\r\n              strokeWeight: 5,\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </GoogleMap>\r\n  );\r\n};\r\n\r\nexport default Map;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,aAAa,EAAEC,kBAAkB,QAAQ,wBAAwB;AACrF,SAASC,oBAAoB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,iBAAiB,GAAG;EACxBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,OAAO;EAAG;EACfC,GAAG,EAAE,CAAC;AACR,CAAC;AAED,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM;IAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAGd,aAAa,CAAC;IAC5Ce,gBAAgB,EAAEC,OAAO,CAACC,GAAG,CAACC;EAChC,CAAC,CAAC;EAEF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMuB,MAAM,GAAG,wBAAwB;IACvC,MAAMC,WAAW,GAAG,wBAAwB;IAC5CpB,oBAAoB,CAACmB,MAAM,EAAEC,WAAW,CAAC,CAACC,IAAI,CAACC,IAAI,IAAI;MACrD,IAAIA,IAAI,CAACC,MAAM,CAACC,MAAM,GAAG,CAAC,EAAE;QAC1BN,aAAa,CAACI,IAAI,CAAC;MACrB;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIV,SAAS,EAAE,oBAAOV,OAAA;IAAAuB,QAAA,EAAK;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACnD,IAAI,CAAClB,QAAQ,EAAE,oBAAOT,OAAA;IAAAuB,QAAA,EAAK;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEhD,oBACE3B,OAAA,CAACL,SAAS;IACRM,iBAAiB,EAAEA,iBAAkB;IACrC2B,IAAI,EAAE,EAAG;IACTxB,MAAM,EAAEA,MAAO;IAAAmB,QAAA,EAEdR,UAAU,iBACTf,OAAA,CAACH,kBAAkB;MACjBkB,UAAU,EAAEA,UAAW;MACvBc,OAAO,EAAE;QACPC,eAAe,EAAE;UACfC,WAAW,EAAE,SAAS;UAAG;UACzBC,aAAa,EAAE,GAAG;UAClBC,YAAY,EAAE;QAChB;MACF;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEhB,CAAC;AAACnB,EAAA,CAzCID,GAAG;EAAA,QACyBX,aAAa;AAAA;AAAAsC,EAAA,GADzC3B,GAAG;AA2CT,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}