{"ast":null,"code":"var _jsxFileName = \"C:\\\\MNNIT\\\\SEM2\\\\programmingLab2\\\\Project\\\\smartcity\\\\smartCity\\\\frontend\\\\src\\\\components\\\\Map\\\\index.js\",\n  _s = $RefreshSig$();\n// src/components/Map/index.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../../context/AuthContext';\nimport MapLoader from './MapLoader';\nimport ControlPanel from './ControlPanel';\nimport Sidebar from './Sidebar';\nimport useMapData from './hooks/useMapData';\nimport useAccidentZones from './hooks/useAccidentZones';\nimport useAlerts from './hooks/useAlerts';\nimport './Map.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/_s(/*#__PURE__*/React.forwardRef(_c = _s(function Map({\n  city,\n  country,\n  onResult\n}, ref) {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const {\n    weather,\n    airQuality,\n    feedbacks,\n    markers,\n    fetchData,\n    addFeedback\n  } = useMapData(city, country, user);\n  const {\n    zones: accidentZones\n  } = useAccidentZones(city);\n  const {\n    alerts\n  } = useAlerts(city);\n  const [center, setCenter] = useState(null);\n  const [zoom, setZoom] = useState(city ? 13 : 6);\n  const [showTraffic, setShowTraffic] = useState(false);\n  const [showZones, setShowZones] = useState(false);\n  const [showAlerts, setShowAlerts] = useState(false);\n  const [activeSidebar, setActiveSidebar] = useState(null);\n  const [showFeedbackForm, setShowFeedbackForm] = useState(false);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const mapRef = useRef();\n  const currentLocationRef = useRef({\n    city: 'New Delhi',\n    country: 'India'\n  });\n  const hasGeolocated = useRef(false);\n  const firstSearchApplied = useRef(false);\n\n  // Handle user geolocation on every load\n  useEffect(() => {\n    // Only attempt geolocation if the city is still the default\n    if (!hasGeolocated.current && city === 'New Delhi') {\n      navigator.geolocation.getCurrentPosition(async pos => {\n        const userLat = pos.coords.latitude;\n        const userLng = pos.coords.longitude;\n        console.log('📍 Using geolocation:', userLat, userLng);\n        setCenter({\n          lat: userLat,\n          lng: userLng\n        });\n        setZoom(13);\n        hasGeolocated.current = true;\n\n        // Optional: Reverse geocode to get city name from lat/lng\n        try {\n          var _data$results, _data$results$;\n          const response = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${userLat},${userLng}&key=YOUR_GOOGLE_MAPS_API_KEY`);\n          const data = await response.json();\n          const address = ((_data$results = data.results) === null || _data$results === void 0 ? void 0 : (_data$results$ = _data$results[0]) === null || _data$results$ === void 0 ? void 0 : _data$results$.address_components) || [];\n          const cityComponent = address.find(comp => comp.types.includes('locality'));\n          const countryComponent = address.find(comp => comp.types.includes('country'));\n          const cityName = (cityComponent === null || cityComponent === void 0 ? void 0 : cityComponent.long_name) || 'Unknown';\n          const countryName = (countryComponent === null || countryComponent === void 0 ? void 0 : countryComponent.long_name) || 'Unknown';\n          currentLocationRef.current = {\n            city: cityName,\n            country: countryName\n          };\n          onResult === null || onResult === void 0 ? void 0 : onResult({\n            success: true,\n            message: `Showing location: ${cityName}`,\n            mapRef: {\n              refocus: () => {\n                var _mapRef$current, _mapRef$current2;\n                (_mapRef$current = mapRef.current) === null || _mapRef$current === void 0 ? void 0 : _mapRef$current.panTo({\n                  lat: userLat,\n                  lng: userLng\n                });\n                (_mapRef$current2 = mapRef.current) === null || _mapRef$current2 === void 0 ? void 0 : _mapRef$current2.setZoom(13);\n              }\n            }\n          });\n        } catch (e) {\n          console.warn('Reverse geocoding failed:', e);\n        }\n      }, err => {\n        console.warn('⚠️ Geolocation failed, fallback to New Delhi:', err.message);\n        setCenter({\n          lat: 28.6139,\n          lng: 77.2090\n        }); // New Delhi fallback\n        setZoom(13);\n        hasGeolocated.current = true;\n      });\n    }\n  }, [city, country, onResult]);\n\n  // Reset UI when city changes\n  useEffect(() => {\n    currentLocationRef.current = {\n      city,\n      country\n    };\n    setActiveSidebar(null);\n    setShowZones(false);\n    setShowAlerts(false);\n    setShowTraffic(false);\n    setShowFeedbackForm(false);\n    firstSearchApplied.current = false;\n  }, [city, country]);\n\n  // Sidebar toggler\n  const onToggle = name => {\n    const next = activeSidebar === name ? null : name;\n    setActiveSidebar(next);\n    setShowTraffic(next === 'traffic');\n    setShowZones(next === 'zones');\n    setShowAlerts(next === 'alerts');\n    setShowFeedbackForm(false);\n  };\n\n  // Feedback report button\n  const handleReportClick = () => {\n    var _mapRef$current3;\n    if (!user) return alert('Please login to submit feedback');\n    const c = (_mapRef$current3 = mapRef.current) === null || _mapRef$current3 === void 0 ? void 0 : _mapRef$current3.getCenter();\n    if (!c) return;\n    setSelectedLocation(`${currentLocationRef.current.city} (${c.lat().toFixed(4)}, ${c.lng().toFixed(4)})`);\n    setShowFeedbackForm(true);\n    setActiveSidebar('feedback');\n  };\n\n  // Submit feedback\n  const handleFeedbackSubmit = async feedback => {\n    if (!user) return alert('Please login to submit feedback');\n    try {\n      var _mapRef$current4;\n      const c = (_mapRef$current4 = mapRef.current) === null || _mapRef$current4 === void 0 ? void 0 : _mapRef$current4.getCenter();\n      await addFeedback({\n        ...feedback,\n        id: `feedback-${Date.now()}`,\n        location_name: selectedLocation,\n        latitude: c.lat(),\n        longitude: c.lng()\n      });\n      setShowFeedbackForm(false);\n      alert('Thank you for your report!');\n    } catch (err) {\n      console.error(err);\n      alert('Failed to submit feedback');\n    }\n  };\n\n  // Marker click → open feedback item\n  const onMarkerClick = id => {\n    const fb = feedbacks.find(f => f.id === id);\n    if (!fb) return;\n    setSelectedLocation(fb.location || fb.location_name);\n    setShowFeedbackForm(true);\n    setActiveSidebar('feedback');\n  };\n\n  // Map load handler\n  const onLoad = map => {\n    mapRef.current = map;\n    map.addListener('click', e => {\n      if (activeSidebar !== 'feedback') return;\n      const lat = e.latLng.lat();\n      const lng = e.latLng.lng();\n      const label = currentLocationRef.current.city ? `${currentLocationRef.current.city} (${lat.toFixed(4)}, ${lng.toFixed(4)})` : `(${lat.toFixed(4)}, ${lng.toFixed(4)})`;\n      setSelectedLocation(label);\n      setShowFeedbackForm(true);\n    });\n  };\n  const onUnmount = () => {\n    mapRef.current = null;\n  };\n\n  // Fetch map data and center based on result\n  useEffect(() => {\n    if (!city) return;\n    setIsLoading(true);\n    fetchData().then(result => {\n      if (result.error) {\n        onResult === null || onResult === void 0 ? void 0 : onResult({\n          success: false,\n          message: result.message\n        });\n        return;\n      }\n      if (result.center && result.zoom != null && !firstSearchApplied.current) {\n        var _mapRef$current5, _mapRef$current6;\n        setCenter(result.center);\n        setZoom(result.zoom);\n        (_mapRef$current5 = mapRef.current) === null || _mapRef$current5 === void 0 ? void 0 : _mapRef$current5.panTo(result.center);\n        (_mapRef$current6 = mapRef.current) === null || _mapRef$current6 === void 0 ? void 0 : _mapRef$current6.setZoom(result.zoom);\n        firstSearchApplied.current = true;\n      }\n      onResult === null || onResult === void 0 ? void 0 : onResult({\n        success: true,\n        message: city,\n        mapRef: {\n          refocus: () => {\n            var _mapRef$current7, _mapRef$current8;\n            setCenter(result.center);\n            setZoom(result.zoom);\n            (_mapRef$current7 = mapRef.current) === null || _mapRef$current7 === void 0 ? void 0 : _mapRef$current7.panTo(result.center);\n            (_mapRef$current8 = mapRef.current) === null || _mapRef$current8 === void 0 ? void 0 : _mapRef$current8.setZoom(result.zoom);\n          }\n        }\n      });\n    }).catch(err => {\n      onResult === null || onResult === void 0 ? void 0 : onResult({\n        success: false,\n        message: 'Unexpected error: ' + err.message\n      });\n    }).finally(() => setIsLoading(false));\n  }, [city, country, fetchData, onResult]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(ControlPanel, {\n      active: activeSidebar,\n      onToggle: onToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `map-container ${activeSidebar ? 'sidebar-open' : ''}`,\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-loading-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), center && /*#__PURE__*/_jsxDEV(MapLoader, {\n        center: center,\n        zoom: zoom,\n        showTraffic: showTraffic,\n        showZones: showZones,\n        showAlerts: showAlerts,\n        accidentZones: accidentZones,\n        alerts: alerts,\n        markers: markers,\n        onLoad: onLoad,\n        onUnmount: onUnmount,\n        onMarkerClick: onMarkerClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      active: activeSidebar,\n      onToggle: onToggle,\n      weather: weather,\n      airQuality: airQuality,\n      city: currentLocationRef.current.city,\n      currentLocation: currentLocationRef.current,\n      showFeedbackForm: showFeedbackForm,\n      selectedLocation: selectedLocation,\n      onReportClick: handleReportClick,\n      onFeedbackSubmit: handleFeedbackSubmit,\n      accidentZones: accidentZones,\n      alerts: alerts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n}, \"Dzz2NmzwL59e8kdr3IuhXVwVa98=\", false, function () {\n  return [useAuth, useMapData, useAccidentZones, useAlerts];\n})), \"Dzz2NmzwL59e8kdr3IuhXVwVa98=\", false, function () {\n  return [useAuth, useMapData, useAccidentZones, useAlerts];\n});\nvar _c, _c2;\n$RefreshReg$(_c, \"%default%$React.forwardRef\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useAuth","MapLoader","ControlPanel","Sidebar","useMapData","useAccidentZones","useAlerts","jsxDEV","_jsxDEV","_c2","_s","forwardRef","_c","Map","city","country","onResult","ref","user","weather","airQuality","feedbacks","markers","fetchData","addFeedback","zones","accidentZones","alerts","center","setCenter","zoom","setZoom","showTraffic","setShowTraffic","showZones","setShowZones","showAlerts","setShowAlerts","activeSidebar","setActiveSidebar","showFeedbackForm","setShowFeedbackForm","selectedLocation","setSelectedLocation","isLoading","setIsLoading","mapRef","currentLocationRef","hasGeolocated","firstSearchApplied","current","navigator","geolocation","getCurrentPosition","pos","userLat","coords","latitude","userLng","longitude","console","log","lat","lng","_data$results","_data$results$","response","fetch","data","json","address","results","address_components","cityComponent","find","comp","types","includes","countryComponent","cityName","long_name","countryName","success","message","refocus","_mapRef$current","_mapRef$current2","panTo","e","warn","err","onToggle","name","next","handleReportClick","_mapRef$current3","alert","c","getCenter","toFixed","handleFeedbackSubmit","feedback","_mapRef$current4","id","Date","now","location_name","error","onMarkerClick","fb","f","location","onLoad","map","addListener","latLng","label","onUnmount","then","result","_mapRef$current5","_mapRef$current6","_mapRef$current7","_mapRef$current8","catch","finally","className","children","active","fileName","_jsxFileName","lineNumber","columnNumber","currentLocation","onReportClick","onFeedbackSubmit","$RefreshReg$"],"sources":["C:/MNNIT/SEM2/programmingLab2/Project/smartcity/smartCity/frontend/src/components/Map/index.js"],"sourcesContent":["// src/components/Map/index.js\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport MapLoader from './MapLoader';\r\nimport ControlPanel from './ControlPanel';\r\nimport Sidebar from './Sidebar';\r\nimport useMapData from './hooks/useMapData';\r\nimport useAccidentZones from './hooks/useAccidentZones';\r\nimport useAlerts from './hooks/useAlerts';\r\nimport './Map.css';\r\n\r\nexport default React.forwardRef(function Map({ city, country, onResult }, ref) {\r\n  const { user } = useAuth();\r\n  const { weather, airQuality, feedbacks, markers, fetchData, addFeedback } =\r\n    useMapData(city, country, user);\r\n  const { zones: accidentZones } = useAccidentZones(city);\r\n  const { alerts } = useAlerts(city);\r\n\r\n  const [center, setCenter] = useState(null);\r\n  const [zoom, setZoom] = useState(city ? 13 : 6);\r\n  const [showTraffic, setShowTraffic] = useState(false);\r\n  const [showZones, setShowZones] = useState(false);\r\n  const [showAlerts, setShowAlerts] = useState(false);\r\n  const [activeSidebar, setActiveSidebar] = useState(null);\r\n  const [showFeedbackForm, setShowFeedbackForm] = useState(false);\r\n  const [selectedLocation, setSelectedLocation] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const mapRef = useRef();\r\n  const currentLocationRef = useRef({ city: 'New Delhi', country: 'India' });\r\n  const hasGeolocated = useRef(false);\r\n  const firstSearchApplied = useRef(false);\r\n\r\n  // Handle user geolocation on every load\r\n  useEffect(() => {\r\n    // Only attempt geolocation if the city is still the default\r\n    if (!hasGeolocated.current && city === 'New Delhi') {\r\n      navigator.geolocation.getCurrentPosition(\r\n        async pos => {\r\n          const userLat = pos.coords.latitude;\r\n          const userLng = pos.coords.longitude;\r\n          console.log('📍 Using geolocation:', userLat, userLng);\r\n          setCenter({ lat: userLat, lng: userLng });\r\n          setZoom(13);\r\n          hasGeolocated.current = true;\r\n  \r\n          // Optional: Reverse geocode to get city name from lat/lng\r\n          try {\r\n            const response = await fetch(\r\n              `https://maps.googleapis.com/maps/api/geocode/json?latlng=${userLat},${userLng}&key=YOUR_GOOGLE_MAPS_API_KEY`\r\n            );\r\n            const data = await response.json();\r\n            const address = data.results?.[0]?.address_components || [];\r\n            const cityComponent = address.find(comp => comp.types.includes('locality'));\r\n            const countryComponent = address.find(comp => comp.types.includes('country'));\r\n            const cityName = cityComponent?.long_name || 'Unknown';\r\n            const countryName = countryComponent?.long_name || 'Unknown';\r\n  \r\n            currentLocationRef.current = { city: cityName, country: countryName };\r\n            onResult?.({\r\n              success: true,\r\n              message: `Showing location: ${cityName}`,\r\n              mapRef: {\r\n                refocus: () => {\r\n                  mapRef.current?.panTo({ lat: userLat, lng: userLng });\r\n                  mapRef.current?.setZoom(13);\r\n                }\r\n              }\r\n            });\r\n          } catch (e) {\r\n            console.warn('Reverse geocoding failed:', e);\r\n          }\r\n        },\r\n        err => {\r\n          console.warn('⚠️ Geolocation failed, fallback to New Delhi:', err.message);\r\n          setCenter({ lat: 28.6139, lng: 77.2090 }); // New Delhi fallback\r\n          setZoom(13);\r\n          hasGeolocated.current = true;\r\n        }\r\n      );\r\n    }\r\n  }, [city, country, onResult]);\r\n  \r\n\r\n  // Reset UI when city changes\r\n  useEffect(() => {\r\n    currentLocationRef.current = { city, country };\r\n    setActiveSidebar(null);\r\n    setShowZones(false);\r\n    setShowAlerts(false);\r\n    setShowTraffic(false);\r\n    setShowFeedbackForm(false);\r\n    firstSearchApplied.current = false;\r\n  }, [city, country]);\r\n\r\n  // Sidebar toggler\r\n  const onToggle = name => {\r\n    const next = activeSidebar === name ? null : name;\r\n    setActiveSidebar(next);\r\n    setShowTraffic(next === 'traffic');\r\n    setShowZones(next === 'zones');\r\n    setShowAlerts(next === 'alerts');\r\n    setShowFeedbackForm(false);\r\n  };\r\n\r\n  // Feedback report button\r\n  const handleReportClick = () => {\r\n    if (!user) return alert('Please login to submit feedback');\r\n    const c = mapRef.current?.getCenter();\r\n    if (!c) return;\r\n    setSelectedLocation(\r\n      `${currentLocationRef.current.city} (${c.lat().toFixed(4)}, ${c.lng().toFixed(4)})`\r\n    );\r\n    setShowFeedbackForm(true);\r\n    setActiveSidebar('feedback');\r\n  };\r\n\r\n  // Submit feedback\r\n  const handleFeedbackSubmit = async feedback => {\r\n    if (!user) return alert('Please login to submit feedback');\r\n    try {\r\n      const c = mapRef.current?.getCenter();\r\n      await addFeedback({\r\n        ...feedback,\r\n        id: `feedback-${Date.now()}`,\r\n        location_name: selectedLocation,\r\n        latitude: c.lat(),\r\n        longitude: c.lng()\r\n      });\r\n      setShowFeedbackForm(false);\r\n      alert('Thank you for your report!');\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Failed to submit feedback');\r\n    }\r\n  };\r\n\r\n  // Marker click → open feedback item\r\n  const onMarkerClick = id => {\r\n    const fb = feedbacks.find(f => f.id === id);\r\n    if (!fb) return;\r\n    setSelectedLocation(fb.location || fb.location_name);\r\n    setShowFeedbackForm(true);\r\n    setActiveSidebar('feedback');\r\n  };\r\n\r\n  // Map load handler\r\n  const onLoad = map => {\r\n    mapRef.current = map;\r\n    map.addListener('click', e => {\r\n      if (activeSidebar !== 'feedback') return;\r\n      const lat = e.latLng.lat();\r\n      const lng = e.latLng.lng();\r\n      const label = currentLocationRef.current.city\r\n        ? `${currentLocationRef.current.city} (${lat.toFixed(4)}, ${lng.toFixed(4)})`\r\n        : `(${lat.toFixed(4)}, ${lng.toFixed(4)})`;\r\n      setSelectedLocation(label);\r\n      setShowFeedbackForm(true);\r\n    });\r\n  };\r\n\r\n  const onUnmount = () => {\r\n    mapRef.current = null;\r\n  };\r\n\r\n  // Fetch map data and center based on result\r\n  useEffect(() => {\r\n    if (!city) return;\r\n    setIsLoading(true);\r\n    fetchData()\r\n      .then(result => {\r\n        if (result.error) {\r\n          onResult?.({ success: false, message: result.message });\r\n          return;\r\n        }\r\n        if (result.center && result.zoom != null && !firstSearchApplied.current) {\r\n          setCenter(result.center);\r\n          setZoom(result.zoom);\r\n          mapRef.current?.panTo(result.center);\r\n          mapRef.current?.setZoom(result.zoom);\r\n          firstSearchApplied.current = true;\r\n        }\r\n\r\n        onResult?.({\r\n          success: true,\r\n          message: city,\r\n          mapRef: {\r\n            refocus: () => {\r\n              setCenter(result.center);\r\n              setZoom(result.zoom);\r\n              mapRef.current?.panTo(result.center);\r\n              mapRef.current?.setZoom(result.zoom);\r\n            }\r\n          }\r\n        });\r\n      })\r\n      .catch(err => {\r\n        onResult?.({ success: false, message: 'Unexpected error: ' + err.message });\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  }, [city, country, fetchData, onResult]);\r\n\r\n  return (\r\n    <div className=\"map-page-container\">\r\n      <ControlPanel active={activeSidebar} onToggle={onToggle} />\r\n\r\n      <div className={`map-container ${activeSidebar ? 'sidebar-open' : ''}`}>\r\n        {isLoading && (\r\n          <div className=\"map-loading-overlay\"><div className=\"spinner\" /></div>\r\n        )}\r\n        {center && (\r\n          <MapLoader\r\n            center={center}\r\n            zoom={zoom}\r\n            showTraffic={showTraffic}\r\n            showZones={showZones}\r\n            showAlerts={showAlerts}\r\n            accidentZones={accidentZones}\r\n            alerts={alerts}\r\n            markers={markers}\r\n            onLoad={onLoad}\r\n            onUnmount={onUnmount}\r\n            onMarkerClick={onMarkerClick}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <Sidebar\r\n        active={activeSidebar}\r\n        onToggle={onToggle}\r\n        weather={weather}\r\n        airQuality={airQuality}\r\n        city={currentLocationRef.current.city}\r\n        currentLocation={currentLocationRef.current}\r\n        showFeedbackForm={showFeedbackForm}\r\n        selectedLocation={selectedLocation}\r\n        onReportClick={handleReportClick}\r\n        onFeedbackSubmit={handleFeedbackSubmit}\r\n        accidentZones={accidentZones}\r\n        alerts={alerts}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}