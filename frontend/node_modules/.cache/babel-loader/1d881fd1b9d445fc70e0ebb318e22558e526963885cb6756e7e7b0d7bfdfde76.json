{"ast":null,"code":"import axios from \"axios\";\n// frontend/src/services/api.js\nconst API_BASE = 'http://localhost:8000/api/auth';\n\n// Enhanced response handler\nconst handleResponse = async response => {\n  const contentType = response.headers.get('content-type');\n  let errorData;\n  try {\n    errorData = contentType !== null && contentType !== void 0 && contentType.includes('application/json') ? await response.json() : {\n      message: await response.text()\n    };\n  } catch {\n    errorData = {\n      message: 'Request failed'\n    };\n  }\n  if (!response.ok) {\n    const error = new Error(errorData.message || `HTTP ${response.status}`);\n    error.status = response.status;\n    error.data = errorData;\n    throw error;\n  }\n  return errorData; // Returns parsed JSON for successful responses\n};\n\n// Auth Services\nexport const login = async credentials => {\n  try {\n    const response = await axios.post(`${API_BASE}/login/`, credentials, {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      withCredentials: true // Equivalent to `credentials: 'include'` in fetch\n    });\n\n    // Save token and user data\n    localStorage.setItem('token', response.data.token);\n    localStorage.setItem('userData', JSON.stringify(response.data.user));\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response2, _error$response2$data;\n    console.error('Login error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed');\n  }\n};\n\n// Set up Axios defaults (for authenticated requests)\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Token ${token}`;\n  }\n  return config;\n});\nexport const register = async userData => {\n  try {\n    const response = await fetch(`${API_BASE}/register/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: userData.username,\n        password: userData.password,\n        email: userData.email,\n        name: userData.name,\n        mobile: userData.mobile\n      })\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    console.error('Registration failed:', error);\n    throw new Error(error.message || 'Registration failed. Please try again.');\n  }\n};\nexport const updateAccount = async updates => {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    throw new Error('Authentication required. Please login.');\n  }\n  try {\n    const response = await fetch(`${API_BASE}/update/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      },\n      body: JSON.stringify(updates)\n    });\n    const data = await handleResponse(response);\n\n    // Update stored user data if needed\n    if (data.user) {\n      const currentData = JSON.parse(localStorage.getItem('userData') || {});\n      localStorage.setItem('userData', JSON.stringify({\n        ...currentData,\n        ...data.user\n      }));\n    }\n    return data;\n  } catch (error) {\n    console.error('Update failed:', error);\n\n    // Auto-logout on 401\n    if (error.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('userData');\n      window.dispatchEvent(new Event('unauthorized'));\n    }\n    throw new Error(error.message || 'Failed to update account.');\n  }\n};\nexport const logout = async () => {\n  const token = localStorage.getItem('token');\n  if (!token) return true;\n  try {\n    await fetch(`${API_BASE}/logout/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    });\n    return true;\n  } catch (error) {\n    console.error('Logout failed:', error);\n    return false;\n  } finally {\n    // Always clear client-side auth\n    localStorage.removeItem('token');\n    localStorage.removeItem('userData');\n  }\n};\n\n// Auth state utilities\nexport const getAuthToken = () => localStorage.getItem('token');\nexport const isAuthenticated = () => !!getAuthToken();\n\n// Axios interceptor setup\nexport const configureAxios = () => {\n  const token = getAuthToken();\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`;\n  }\n  axios.interceptors.response.use(response => response, error => {\n    var _error$response3;\n    if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n      localStorage.removeItem('token');\n      window.dispatchEvent(new Event('unauthorized'));\n    }\n    return Promise.reject(error);\n  });\n};\n\n// Initialize on import\nconfigureAxios();","map":{"version":3,"names":["axios","API_BASE","handleResponse","response","contentType","headers","get","errorData","includes","json","message","text","ok","error","Error","status","data","login","credentials","post","withCredentials","localStorage","setItem","token","JSON","stringify","user","_error$response","_error$response2","_error$response2$data","console","interceptors","request","use","config","getItem","Authorization","register","userData","fetch","method","body","username","password","email","name","mobile","updateAccount","updates","currentData","parse","removeItem","window","dispatchEvent","Event","logout","getAuthToken","isAuthenticated","configureAxios","defaults","common","_error$response3","Promise","reject"],"sources":["C:/MNNIT/SEM2/programmingLab2/Project/smartcity/smartCity/frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n// frontend/src/services/api.js\r\nconst API_BASE = 'http://localhost:8000/api/auth';\r\n\r\n// Enhanced response handler\r\nconst handleResponse = async (response) => {\r\n  const contentType = response.headers.get('content-type');\r\n  let errorData;\r\n  \r\n  try {\r\n    errorData = contentType?.includes('application/json') \r\n      ? await response.json() \r\n      : { message: await response.text() };\r\n  } catch {\r\n    errorData = { message: 'Request failed' };\r\n  }\r\n\r\n  if (!response.ok) {\r\n    const error = new Error(errorData.message || `HTTP ${response.status}`);\r\n    error.status = response.status;\r\n    error.data = errorData;\r\n    throw error;\r\n  }\r\n\r\n  return errorData; // Returns parsed JSON for successful responses\r\n};\r\n\r\n// Auth Services\r\nexport const login = async (credentials) => {\r\n  try {\r\n    const response = await axios.post(`${API_BASE}/login/`, credentials, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      withCredentials: true,  // Equivalent to `credentials: 'include'` in fetch\r\n    });\r\n\r\n    // Save token and user data\r\n    localStorage.setItem('token', response.data.token);\r\n    localStorage.setItem('userData', JSON.stringify(response.data.user));\r\n    return response.data;\r\n\r\n  } catch (error) {\r\n    console.error('Login error:', error.response?.data || error.message);\r\n    throw new Error(error.response?.data?.message || 'Login failed');\r\n  }\r\n};\r\n\r\n// Set up Axios defaults (for authenticated requests)\r\naxios.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Token ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport const register = async (userData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE}/register/`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        username: userData.username,\r\n        password: userData.password,\r\n        email: userData.email,\r\n        name: userData.name,\r\n        mobile: userData.mobile\r\n      })\r\n    });\r\n\r\n    return await handleResponse(response);\r\n  } catch (error) {\r\n    console.error('Registration failed:', error);\r\n    throw new Error(error.message || 'Registration failed. Please try again.');\r\n  }\r\n};\r\n\r\nexport const updateAccount = async (updates) => {\r\n  const token = localStorage.getItem('token');\r\n  if (!token) {\r\n    throw new Error('Authentication required. Please login.');\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`${API_BASE}/update/`, {\r\n      method: 'POST',\r\n      headers: { \r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      },\r\n      body: JSON.stringify(updates)\r\n    });\r\n\r\n    const data = await handleResponse(response);\r\n    \r\n    // Update stored user data if needed\r\n    if (data.user) {\r\n      const currentData = JSON.parse(localStorage.getItem('userData') || {});\r\n      localStorage.setItem('userData', JSON.stringify({\r\n        ...currentData,\r\n        ...data.user\r\n      }));\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Update failed:', error);\r\n    \r\n    // Auto-logout on 401\r\n    if (error.status === 401) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('userData');\r\n      window.dispatchEvent(new Event('unauthorized'));\r\n    }\r\n\r\n    throw new Error(error.message || 'Failed to update account.');\r\n  }\r\n};\r\n\r\nexport const logout = async () => {\r\n  const token = localStorage.getItem('token');\r\n  if (!token) return true;\r\n\r\n  try {\r\n    await fetch(`${API_BASE}/logout/`, {\r\n      method: 'POST',\r\n      headers: { \r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n      }\r\n    });\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Logout failed:', error);\r\n    return false;\r\n  } finally {\r\n    // Always clear client-side auth\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('userData');\r\n  }\r\n};\r\n\r\n// Auth state utilities\r\nexport const getAuthToken = () => localStorage.getItem('token');\r\n\r\nexport const isAuthenticated = () => !!getAuthToken();\r\n\r\n// Axios interceptor setup\r\nexport const configureAxios = () => {\r\n  const token = getAuthToken();\r\n  if (token) {\r\n    axios.defaults.headers.common['Authorization'] = `Token ${token}`;\r\n  }\r\n  \r\n  axios.interceptors.response.use(\r\n    response => response,\r\n    error => {\r\n      if (error.response?.status === 401) {\r\n        localStorage.removeItem('token');\r\n        window.dispatchEvent(new Event('unauthorized'));\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n};\r\n\r\n// Initialize on import\r\nconfigureAxios();"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,MAAMC,QAAQ,GAAG,gCAAgC;;AAEjD;AACA,MAAMC,cAAc,GAAG,MAAOC,QAAQ,IAAK;EACzC,MAAMC,WAAW,GAAGD,QAAQ,CAACE,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;EACxD,IAAIC,SAAS;EAEb,IAAI;IACFA,SAAS,GAAGH,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAEI,QAAQ,CAAC,kBAAkB,CAAC,GACjD,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC,GACrB;MAAEC,OAAO,EAAE,MAAMP,QAAQ,CAACQ,IAAI,CAAC;IAAE,CAAC;EACxC,CAAC,CAAC,MAAM;IACNJ,SAAS,GAAG;MAAEG,OAAO,EAAE;IAAiB,CAAC;EAC3C;EAEA,IAAI,CAACP,QAAQ,CAACS,EAAE,EAAE;IAChB,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAACP,SAAS,CAACG,OAAO,IAAI,QAAQP,QAAQ,CAACY,MAAM,EAAE,CAAC;IACvEF,KAAK,CAACE,MAAM,GAAGZ,QAAQ,CAACY,MAAM;IAC9BF,KAAK,CAACG,IAAI,GAAGT,SAAS;IACtB,MAAMM,KAAK;EACb;EAEA,OAAON,SAAS,CAAC,CAAC;AACpB,CAAC;;AAED;AACA,OAAO,MAAMU,KAAK,GAAG,MAAOC,WAAW,IAAK;EAC1C,IAAI;IACF,MAAMf,QAAQ,GAAG,MAAMH,KAAK,CAACmB,IAAI,CAAC,GAAGlB,QAAQ,SAAS,EAAEiB,WAAW,EAAE;MACnEb,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDe,eAAe,EAAE,IAAI,CAAG;IAC1B,CAAC,CAAC;;IAEF;IACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEnB,QAAQ,CAACa,IAAI,CAACO,KAAK,CAAC;IAClDF,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEE,IAAI,CAACC,SAAS,CAACtB,QAAQ,CAACa,IAAI,CAACU,IAAI,CAAC,CAAC;IACpE,OAAOvB,QAAQ,CAACa,IAAI;EAEtB,CAAC,CAAC,OAAOH,KAAK,EAAE;IAAA,IAAAc,eAAA,EAAAC,gBAAA,EAAAC,qBAAA;IACdC,OAAO,CAACjB,KAAK,CAAC,cAAc,EAAE,EAAAc,eAAA,GAAAd,KAAK,CAACV,QAAQ,cAAAwB,eAAA,uBAAdA,eAAA,CAAgBX,IAAI,KAAIH,KAAK,CAACH,OAAO,CAAC;IACpE,MAAM,IAAII,KAAK,CAAC,EAAAc,gBAAA,GAAAf,KAAK,CAACV,QAAQ,cAAAyB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBZ,IAAI,cAAAa,qBAAA,uBAApBA,qBAAA,CAAsBnB,OAAO,KAAI,cAAc,CAAC;EAClE;AACF,CAAC;;AAED;AACAV,KAAK,CAAC+B,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACzC,MAAMX,KAAK,GAAGF,YAAY,CAACc,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIZ,KAAK,EAAE;IACTW,MAAM,CAAC7B,OAAO,CAAC+B,aAAa,GAAG,SAASb,KAAK,EAAE;EACjD;EACA,OAAOW,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMG,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EAC1C,IAAI;IACF,MAAMnC,QAAQ,GAAG,MAAMoC,KAAK,CAAC,GAAGtC,QAAQ,YAAY,EAAE;MACpDuC,MAAM,EAAE,MAAM;MACdnC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CoC,IAAI,EAAEjB,IAAI,CAACC,SAAS,CAAC;QACnBiB,QAAQ,EAAEJ,QAAQ,CAACI,QAAQ;QAC3BC,QAAQ,EAAEL,QAAQ,CAACK,QAAQ;QAC3BC,KAAK,EAAEN,QAAQ,CAACM,KAAK;QACrBC,IAAI,EAAEP,QAAQ,CAACO,IAAI;QACnBC,MAAM,EAAER,QAAQ,CAACQ;MACnB,CAAC;IACH,CAAC,CAAC;IAEF,OAAO,MAAM5C,cAAc,CAACC,QAAQ,CAAC;EACvC,CAAC,CAAC,OAAOU,KAAK,EAAE;IACdiB,OAAO,CAACjB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAM,IAAIC,KAAK,CAACD,KAAK,CAACH,OAAO,IAAI,wCAAwC,CAAC;EAC5E;AACF,CAAC;AAED,OAAO,MAAMqC,aAAa,GAAG,MAAOC,OAAO,IAAK;EAC9C,MAAMzB,KAAK,GAAGF,YAAY,CAACc,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACZ,KAAK,EAAE;IACV,MAAM,IAAIT,KAAK,CAAC,wCAAwC,CAAC;EAC3D;EAEA,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMoC,KAAK,CAAC,GAAGtC,QAAQ,UAAU,EAAE;MAClDuC,MAAM,EAAE,MAAM;MACdnC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,SAASkB,KAAK;MACjC,CAAC;MACDkB,IAAI,EAAEjB,IAAI,CAACC,SAAS,CAACuB,OAAO;IAC9B,CAAC,CAAC;IAEF,MAAMhC,IAAI,GAAG,MAAMd,cAAc,CAACC,QAAQ,CAAC;;IAE3C;IACA,IAAIa,IAAI,CAACU,IAAI,EAAE;MACb,MAAMuB,WAAW,GAAGzB,IAAI,CAAC0B,KAAK,CAAC7B,YAAY,CAACc,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;MACtEd,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEE,IAAI,CAACC,SAAS,CAAC;QAC9C,GAAGwB,WAAW;QACd,GAAGjC,IAAI,CAACU;MACV,CAAC,CAAC,CAAC;IACL;IAEA,OAAOV,IAAI;EACb,CAAC,CAAC,OAAOH,KAAK,EAAE;IACdiB,OAAO,CAACjB,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;;IAEtC;IACA,IAAIA,KAAK,CAACE,MAAM,KAAK,GAAG,EAAE;MACxBM,YAAY,CAAC8B,UAAU,CAAC,OAAO,CAAC;MAChC9B,YAAY,CAAC8B,UAAU,CAAC,UAAU,CAAC;MACnCC,MAAM,CAACC,aAAa,CAAC,IAAIC,KAAK,CAAC,cAAc,CAAC,CAAC;IACjD;IAEA,MAAM,IAAIxC,KAAK,CAACD,KAAK,CAACH,OAAO,IAAI,2BAA2B,CAAC;EAC/D;AACF,CAAC;AAED,OAAO,MAAM6C,MAAM,GAAG,MAAAA,CAAA,KAAY;EAChC,MAAMhC,KAAK,GAAGF,YAAY,CAACc,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACZ,KAAK,EAAE,OAAO,IAAI;EAEvB,IAAI;IACF,MAAMgB,KAAK,CAAC,GAAGtC,QAAQ,UAAU,EAAE;MACjCuC,MAAM,EAAE,MAAM;MACdnC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,SAASkB,KAAK;MACjC;IACF,CAAC,CAAC;IACF,OAAO,IAAI;EACb,CAAC,CAAC,OAAOV,KAAK,EAAE;IACdiB,OAAO,CAACjB,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACtC,OAAO,KAAK;EACd,CAAC,SAAS;IACR;IACAQ,YAAY,CAAC8B,UAAU,CAAC,OAAO,CAAC;IAChC9B,YAAY,CAAC8B,UAAU,CAAC,UAAU,CAAC;EACrC;AACF,CAAC;;AAED;AACA,OAAO,MAAMK,YAAY,GAAGA,CAAA,KAAMnC,YAAY,CAACc,OAAO,CAAC,OAAO,CAAC;AAE/D,OAAO,MAAMsB,eAAe,GAAGA,CAAA,KAAM,CAAC,CAACD,YAAY,CAAC,CAAC;;AAErD;AACA,OAAO,MAAME,cAAc,GAAGA,CAAA,KAAM;EAClC,MAAMnC,KAAK,GAAGiC,YAAY,CAAC,CAAC;EAC5B,IAAIjC,KAAK,EAAE;IACTvB,KAAK,CAAC2D,QAAQ,CAACtD,OAAO,CAACuD,MAAM,CAAC,eAAe,CAAC,GAAG,SAASrC,KAAK,EAAE;EACnE;EAEAvB,KAAK,CAAC+B,YAAY,CAAC5B,QAAQ,CAAC8B,GAAG,CAC7B9B,QAAQ,IAAIA,QAAQ,EACpBU,KAAK,IAAI;IAAA,IAAAgD,gBAAA;IACP,IAAI,EAAAA,gBAAA,GAAAhD,KAAK,CAACV,QAAQ,cAAA0D,gBAAA,uBAAdA,gBAAA,CAAgB9C,MAAM,MAAK,GAAG,EAAE;MAClCM,YAAY,CAAC8B,UAAU,CAAC,OAAO,CAAC;MAChCC,MAAM,CAACC,aAAa,CAAC,IAAIC,KAAK,CAAC,cAAc,CAAC,CAAC;IACjD;IACA,OAAOQ,OAAO,CAACC,MAAM,CAAClD,KAAK,CAAC;EAC9B,CACF,CAAC;AACH,CAAC;;AAED;AACA6C,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}