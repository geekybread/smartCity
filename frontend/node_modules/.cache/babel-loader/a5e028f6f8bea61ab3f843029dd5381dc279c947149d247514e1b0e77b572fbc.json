{"ast":null,"code":"var _jsxFileName = \"C:\\\\MNNIT\\\\SEM2\\\\programmingLab2\\\\Project\\\\smartcity\\\\smartCity\\\\frontend\\\\src\\\\components\\\\Map\\\\MapLoader.js\",\n  _s = $RefreshSig$();\n// src/components/Map/MapLoader.js\n\nimport React from 'react';\nimport { GoogleMap, useLoadScript, TrafficLayer, Polygon } from '@react-google-maps/api';\nimport { GOOGLE_MAPS_CONFIG } from './configs/maps';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MapLoader({\n  center,\n  zoom,\n  showTraffic,\n  showZones,\n  accidentZones,\n  onLoad,\n  onUnmount,\n  onMapClick\n}) {\n  _s();\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: GOOGLE_MAPS_CONFIG.apiKey,\n    libraries: ['drawing'] // no change needed here\n  });\n  if (loadError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-error\",\n    children: \"Error loading map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 25\n  }, this);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-loading\",\n    children: \"Loading Map\\u2026\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: {\n      width: '100%',\n      height: '100%'\n    },\n    center: center,\n    zoom: zoom,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    onClick: onMapClick,\n    options: {\n      disableDefaultUI: false,\n      gestureHandling: 'greedy',\n      zoomControl: true\n    },\n    children: [showTraffic && /*#__PURE__*/_jsxDEV(TrafficLayer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }, this), showZones && accidentZones.map(zone => {\n      // convert [[lat, lng], …] into [{lat, lng}, …]\n      const path = Array.isArray(zone.polygon) ? zone.polygon.map(coord => ({\n        lat: Number(coord[0]),\n        lng: Number(coord[1])\n      })) : [];\n      return /*#__PURE__*/_jsxDEV(Polygon, {\n        paths: path,\n        options: {\n          fillColor: 'red',\n          fillOpacity: 0.3,\n          strokeColor: 'red',\n          strokeOpacity: 0.8\n        }\n      }, zone.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(MapLoader, \"Cye17iwlLw61yP2k5hqy29yMy+o=\", false, function () {\n  return [useLoadScript];\n});\n_c = MapLoader;\nvar _c;\n$RefreshReg$(_c, \"MapLoader\");","map":{"version":3,"names":["React","GoogleMap","useLoadScript","TrafficLayer","Polygon","GOOGLE_MAPS_CONFIG","jsxDEV","_jsxDEV","MapLoader","center","zoom","showTraffic","showZones","accidentZones","onLoad","onUnmount","onMapClick","_s","isLoaded","loadError","googleMapsApiKey","apiKey","libraries","className","children","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","width","height","onClick","options","disableDefaultUI","gestureHandling","zoomControl","map","zone","path","Array","isArray","polygon","coord","lat","Number","lng","paths","fillColor","fillOpacity","strokeColor","strokeOpacity","id","_c","$RefreshReg$"],"sources":["C:/MNNIT/SEM2/programmingLab2/Project/smartcity/smartCity/frontend/src/components/Map/MapLoader.js"],"sourcesContent":["// src/components/Map/MapLoader.js\r\n\r\nimport React from 'react'\r\nimport {\r\n  GoogleMap,\r\n  useLoadScript,\r\n  TrafficLayer,\r\n  Polygon\r\n} from '@react-google-maps/api'\r\nimport { GOOGLE_MAPS_CONFIG } from './configs/maps'\r\n\r\nexport default function MapLoader({\r\n  center,\r\n  zoom,\r\n  showTraffic,\r\n  showZones,\r\n  accidentZones,\r\n  onLoad,\r\n  onUnmount,\r\n  onMapClick\r\n}) {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: GOOGLE_MAPS_CONFIG.apiKey,\r\n    libraries: ['drawing']  // no change needed here\r\n  })\r\n\r\n  if (loadError) return <div className=\"map-error\">Error loading map</div>\r\n  if (!isLoaded) return <div className=\"map-loading\">Loading Map…</div>\r\n\r\n  return (\r\n    <GoogleMap\r\n      mapContainerStyle={{ width: '100%', height: '100%' }}\r\n      center={center}\r\n      zoom={zoom}\r\n      onLoad={onLoad}\r\n      onUnmount={onUnmount}\r\n      onClick={onMapClick}\r\n      options={{\r\n        disableDefaultUI: false,\r\n        gestureHandling: 'greedy',\r\n        zoomControl: true\r\n      }}\r\n    >\r\n      {showTraffic && <TrafficLayer />}\r\n\r\n      {showZones &&\r\n        accidentZones.map(zone => {\r\n          // convert [[lat, lng], …] into [{lat, lng}, …]\r\n          const path = Array.isArray(zone.polygon)\r\n            ? zone.polygon.map(coord => ({\r\n                lat: Number(coord[0]),\r\n                lng: Number(coord[1])\r\n              }))\r\n            : []\r\n\r\n          return (\r\n            <Polygon\r\n              key={zone.id}\r\n              paths={path}\r\n              options={{\r\n                fillColor: 'red',\r\n                fillOpacity: 0.3,\r\n                strokeColor: 'red',\r\n                strokeOpacity: 0.8\r\n              }}\r\n            />\r\n          )\r\n        })}\r\n    </GoogleMap>\r\n  )\r\n}\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,SAAS,EACTC,aAAa,EACbC,YAAY,EACZC,OAAO,QACF,wBAAwB;AAC/B,SAASC,kBAAkB,QAAQ,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,SAASA,CAAC;EAChCC,MAAM;EACNC,IAAI;EACJC,WAAW;EACXC,SAAS;EACTC,aAAa;EACbC,MAAM;EACNC,SAAS;EACTC;AACF,CAAC,EAAE;EAAAC,EAAA;EACD,MAAM;IAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAGjB,aAAa,CAAC;IAC5CkB,gBAAgB,EAAEf,kBAAkB,CAACgB,MAAM;IAC3CC,SAAS,EAAE,CAAC,SAAS,CAAC,CAAE;EAC1B,CAAC,CAAC;EAEF,IAAIH,SAAS,EAAE,oBAAOZ,OAAA;IAAKgB,SAAS,EAAC,WAAW;IAAAC,QAAA,EAAC;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACxE,IAAI,CAACV,QAAQ,EAAE,oBAAOX,OAAA;IAAKgB,SAAS,EAAC,aAAa;IAAAC,QAAA,EAAC;EAAY;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAErE,oBACErB,OAAA,CAACN,SAAS;IACR4B,iBAAiB,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAO,CAAE;IACrDtB,MAAM,EAAEA,MAAO;IACfC,IAAI,EAAEA,IAAK;IACXI,MAAM,EAAEA,MAAO;IACfC,SAAS,EAAEA,SAAU;IACrBiB,OAAO,EAAEhB,UAAW;IACpBiB,OAAO,EAAE;MACPC,gBAAgB,EAAE,KAAK;MACvBC,eAAe,EAAE,QAAQ;MACzBC,WAAW,EAAE;IACf,CAAE;IAAAZ,QAAA,GAEDb,WAAW,iBAAIJ,OAAA,CAACJ,YAAY;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAE/BhB,SAAS,IACRC,aAAa,CAACwB,GAAG,CAACC,IAAI,IAAI;MACxB;MACA,MAAMC,IAAI,GAAGC,KAAK,CAACC,OAAO,CAACH,IAAI,CAACI,OAAO,CAAC,GACpCJ,IAAI,CAACI,OAAO,CAACL,GAAG,CAACM,KAAK,KAAK;QACzBC,GAAG,EAAEC,MAAM,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC;QACrBG,GAAG,EAAED,MAAM,CAACF,KAAK,CAAC,CAAC,CAAC;MACtB,CAAC,CAAC,CAAC,GACH,EAAE;MAEN,oBACEpC,OAAA,CAACH,OAAO;QAEN2C,KAAK,EAAER,IAAK;QACZN,OAAO,EAAE;UACPe,SAAS,EAAE,KAAK;UAChBC,WAAW,EAAE,GAAG;UAChBC,WAAW,EAAE,KAAK;UAClBC,aAAa,EAAE;QACjB;MAAE,GAPGb,IAAI,CAACc,EAAE;QAAA3B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQb,CAAC;IAEN,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEhB;AAACX,EAAA,CA3DuBT,SAAS;EAAA,QAUCN,aAAa;AAAA;AAAAmD,EAAA,GAVvB7C,SAAS;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}