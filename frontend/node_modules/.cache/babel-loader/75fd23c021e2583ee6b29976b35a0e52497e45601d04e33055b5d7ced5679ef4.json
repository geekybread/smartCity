{"ast":null,"code":"var _jsxFileName = \"C:\\\\MNNIT\\\\SEM2\\\\programmingLab2\\\\Project\\\\smartcity\\\\smartCity\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Map from './components/Map';\nimport './App.css';\nimport { getCountryCapital } from './services/countryData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [location, setLocation] = useState({\n    city: 'Delhi',\n    country: 'India'\n  });\n  const [searchQuery, setSearchQuery] = useState({\n    city: '',\n    country: ''\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSearch = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    try {\n      // Trim and validate inputs\n      const cityQuery = searchQuery.city.trim();\n      const countryQuery = searchQuery.country.trim();\n      if (!cityQuery && !countryQuery) {\n        throw new Error('Please enter a city or country');\n      }\n      if (countryQuery && !cityQuery) {\n        const capital = await getCountryCapital(countryQuery);\n        setLocation({\n          city: capital,\n          country: countryQuery\n        });\n      } else {\n        setLocation({\n          city: cityQuery,\n          country: countryQuery\n        });\n      }\n    } catch (error) {\n      alert(`Search error: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSearchQuery(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Smart City Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"city\",\n          placeholder: \"City (e.g. Delhi)\",\n          value: searchQuery.city,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"country\",\n          placeholder: \"Country (e.g. India)\",\n          value: searchQuery.country,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isLoading,\n          children: isLoading ? 'Searching...' : 'Search'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"search-hint\",\n        children: [!searchQuery.country && searchQuery.city && \"• Will search for city globally\", searchQuery.country && !searchQuery.city && \"• Will show country's capital\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Map, {\n      city: location.city,\n      country: location.country\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kDAhqPn4myMZfBD8WL23GHN53pw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Map","getCountryCapital","jsxDEV","_jsxDEV","App","_s","location","setLocation","city","country","searchQuery","setSearchQuery","isLoading","setIsLoading","handleSearch","e","preventDefault","cityQuery","trim","countryQuery","Error","capital","error","alert","message","handleInputChange","name","value","target","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","disabled","_c","$RefreshReg$"],"sources":["C:/MNNIT/SEM2/programmingLab2/Project/smartcity/smartCity/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Map from './components/Map';\nimport './App.css';\nimport { getCountryCapital } from './services/countryData';\n\nfunction App() {\n  const [location, setLocation] = useState({\n    city: 'Delhi',\n    country: 'India'\n  });\n  const [searchQuery, setSearchQuery] = useState({\n    city: '',\n    country: ''\n  });\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n  \n    try {\n      // Trim and validate inputs\n      const cityQuery = searchQuery.city.trim();\n      const countryQuery = searchQuery.country.trim();\n  \n      if (!cityQuery && !countryQuery) {\n        throw new Error('Please enter a city or country');\n      }\n  \n      if (countryQuery && !cityQuery) {\n        const capital = await getCountryCapital(countryQuery);\n        setLocation({\n          city: capital,\n          country: countryQuery\n        });\n      } else {\n        setLocation({\n          city: cityQuery,\n          country: countryQuery\n        });\n      }\n    } catch (error) {\n      alert(`Search error: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setSearchQuery(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Smart City Dashboard</h1>\n\n      <form onSubmit={handleSearch} className=\"search-bar\">\n        <div className=\"search-fields\">\n          <input\n            type=\"text\"\n            name=\"city\"\n            placeholder=\"City (e.g. Delhi)\"\n            value={searchQuery.city}\n            onChange={handleInputChange}\n          />\n          <input\n            type=\"text\"\n            name=\"country\"\n            placeholder=\"Country (e.g. India)\"\n            value={searchQuery.country}\n            onChange={handleInputChange}\n          />\n          <button type=\"submit\" disabled={isLoading}>\n            {isLoading ? 'Searching...' : 'Search'}\n          </button>\n        </div>\n        <p className=\"search-hint\">\n          {!searchQuery.country && searchQuery.city && \n           \"• Will search for city globally\"}\n          {searchQuery.country && !searchQuery.city && \n           \"• Will show country's capital\"}\n        </p>\n      </form>\n\n      <Map \n        city={location.city} \n        country={location.country} \n      />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}