{"ast":null,"code":"var _jsxFileName = \"C:\\\\MNNIT\\\\SEM2\\\\programmingLab2\\\\Project\\\\smartcity\\\\smartCity\\\\frontend\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Map from './components/Map';\nimport './App.css';\nimport { getCountryCapital } from '../services/countryData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [location, setLocation] = useState({\n    city: 'Delhi',\n    country: 'India'\n  });\n  const [searchQuery, setSearchQuery] = useState({\n    city: '',\n    country: ''\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSearch = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    try {\n      // Case 1: Only country provided → show capital\n      if (searchQuery.country && !searchQuery.city) {\n        const capital = await getCountryCapital(searchQuery.country);\n        setLocation({\n          city: capital,\n          country: searchQuery.country\n        });\n      }\n      // Case 2: Only city provided → search globally\n      else if (searchQuery.city && !searchQuery.country) {\n        setLocation({\n          city: searchQuery.city,\n          country: '' // Let the Map component handle global search\n        });\n      }\n      // Case 3: Both provided → search city in country\n      else if (searchQuery.city && searchQuery.country) {\n        setLocation({\n          city: searchQuery.city,\n          country: searchQuery.country\n        });\n      }\n      // Case 4: Nothing provided → show defaults\n      else {\n        setLocation({\n          city: 'Delhi',\n          country: 'India'\n        });\n      }\n    } catch (error) {\n      alert(`Search failed: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSearchQuery(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Smart City Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"city\",\n          placeholder: \"City (e.g. Paris)\",\n          value: searchQuery.city,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"country\",\n          placeholder: \"Country (e.g. France)\",\n          value: searchQuery.country,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isLoading,\n          children: isLoading ? 'Searching...' : 'Search'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"search-hint\",\n        children: [!searchQuery.country && searchQuery.city && \"• Will search for city globally\", searchQuery.country && !searchQuery.city && \"• Will show country's capital\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Map, {\n      city: location.city,\n      country: location.country\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nnN5C2ZRoco8f9cMgNbDXz3eP98=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Map","getCountryCapital","jsxDEV","_jsxDEV","App","_s","location","setLocation","city","country","searchQuery","setSearchQuery","isLoading","setIsLoading","handleSearch","e","preventDefault","capital","error","alert","message","handleInputChange","name","value","target","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","disabled","_c","$RefreshReg$"],"sources":["C:/MNNIT/SEM2/programmingLab2/Project/smartcity/smartCity/frontend/src/components/Map.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Map from './components/Map';\r\nimport './App.css';\r\nimport { getCountryCapital } from '../services/countryData';\r\n\r\nfunction App() {\r\n  const [location, setLocation] = useState({\r\n    city: 'Delhi',\r\n    country: 'India'\r\n  });\r\n  const [searchQuery, setSearchQuery] = useState({\r\n    city: '',\r\n    country: ''\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Case 1: Only country provided → show capital\r\n      if (searchQuery.country && !searchQuery.city) {\r\n        const capital = await getCountryCapital(searchQuery.country);\r\n        setLocation({\r\n          city: capital,\r\n          country: searchQuery.country\r\n        });\r\n      }\r\n      // Case 2: Only city provided → search globally\r\n      else if (searchQuery.city && !searchQuery.country) {\r\n        setLocation({\r\n          city: searchQuery.city,\r\n          country: '' // Let the Map component handle global search\r\n        });\r\n      }\r\n      // Case 3: Both provided → search city in country\r\n      else if (searchQuery.city && searchQuery.country) {\r\n        setLocation({\r\n          city: searchQuery.city,\r\n          country: searchQuery.country\r\n        });\r\n      }\r\n      // Case 4: Nothing provided → show defaults\r\n      else {\r\n        setLocation({\r\n          city: 'Delhi',\r\n          country: 'India'\r\n        });\r\n      }\r\n    } catch (error) {\r\n      alert(`Search failed: ${error.message}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setSearchQuery(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Smart City Dashboard</h1>\r\n\r\n      <form onSubmit={handleSearch} className=\"search-bar\">\r\n        <div className=\"search-fields\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"city\"\r\n            placeholder=\"City (e.g. Paris)\"\r\n            value={searchQuery.city}\r\n            onChange={handleInputChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"country\"\r\n            placeholder=\"Country (e.g. France)\"\r\n            value={searchQuery.country}\r\n            onChange={handleInputChange}\r\n          />\r\n          <button type=\"submit\" disabled={isLoading}>\r\n            {isLoading ? 'Searching...' : 'Search'}\r\n          </button>\r\n        </div>\r\n        <p className=\"search-hint\">\r\n          {!searchQuery.country && searchQuery.city && \r\n           \"• Will search for city globally\"}\r\n          {searchQuery.country && !searchQuery.city && \r\n           \"• Will show country's capital\"}\r\n        </p>\r\n      </form>\r\n\r\n      <Map \r\n        city={location.city} \r\n        country={location.country} \r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}