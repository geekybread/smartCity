{"ast":null,"code":"var _jsxFileName = \"C:\\\\MNNIT\\\\SEM2\\\\programmingLab2\\\\Project\\\\smartcity\\\\smartCity\\\\frontend\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { GoogleMap, useLoadScript, TrafficLayer } from '@react-google-maps/api';\nimport { getWeatherData, getCityCoordinates } from '../services/weather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapContainerStyle = {\n  width: '1200px',\n  height: '800px'\n};\nconst Map = ({\n  city\n}) => {\n  _s();\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  });\n  const [weather, setWeather] = useState({\n    main: {\n      temp: 'N/A'\n    },\n    weather: [{\n      description: 'N/A'\n    }]\n  });\n  const [center, setCenter] = useState({\n    lat: 34.04924594193164,\n    // Default center (Los Angeles)\n    lng: -118.24104309082031\n  });\n  const [map, setMap] = useState(null);\n  const [showTraffic, setShowTraffic] = useState(false); // Toggle traffic layer\n\n  // Fetch city coordinates and update map center\n  useEffect(() => {\n    const fetchCityData = async () => {\n      try {\n        const {\n          lat,\n          lon\n        } = await getCityCoordinates(city);\n        setCenter({\n          lat,\n          lng: lon\n        });\n\n        // Fetch weather data for the new city\n        const weatherData = await getWeatherData(lat, lon);\n        setWeather(weatherData);\n      } catch (error) {\n        console.error('Error fetching city data:', error);\n        setWeather({\n          error: 'Failed to load city data'\n        });\n      }\n    };\n    fetchCityData();\n  }, [city]);\n\n  // Handle map load\n  const onLoad = useCallback(map => {\n    setMap(map);\n  }, []);\n\n  // Handle errors and loading states\n  if (loadError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error loading maps\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 25\n  }, this);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading Maps...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"widgets\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widget\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Weather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: weather && weather.main ? `${weather.main.temp}°C, ${weather.weather[0].description}` : (weather === null || weather === void 0 ? void 0 : weather.error) || 'Loading weather data...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowTraffic(!showTraffic),\n      className: \"traffic-toggle\",\n      children: showTraffic ? 'Hide Traffic' : 'Show Traffic'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      zoom: 13,\n      center: center,\n      onLoad: onLoad // Call onLoad when the map loads\n      ,\n      children: [showTraffic && /*#__PURE__*/_jsxDEV(TrafficLayer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"o1VeSh/pP+xNdLfS8rpiuvazej0=\", false, function () {\n  return [useLoadScript];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","GoogleMap","useLoadScript","TrafficLayer","getWeatherData","getCityCoordinates","jsxDEV","_jsxDEV","mapContainerStyle","width","height","Map","city","_s","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","weather","setWeather","main","temp","description","center","setCenter","lat","lng","map","setMap","showTraffic","setShowTraffic","fetchCityData","lon","weatherData","error","console","onLoad","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","zoom","_c","$RefreshReg$"],"sources":["C:/MNNIT/SEM2/programmingLab2/Project/smartcity/smartCity/frontend/src/components/Map.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { GoogleMap, useLoadScript, TrafficLayer } from '@react-google-maps/api';\r\nimport { getWeatherData, getCityCoordinates } from '../services/weather';\r\n\r\nconst mapContainerStyle = {\r\n  width: '1200px',\r\n  height: '800px',\r\n};\r\n\r\nconst Map = ({ city }) => {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n  });\r\n\r\n  const [weather, setWeather] = useState({\r\n    main: { temp: 'N/A' },\r\n    weather: [{ description: 'N/A' }],\r\n  });\r\n  const [center, setCenter] = useState({\r\n    lat: 34.04924594193164,  // Default center (Los Angeles)\r\n    lng: -118.24104309082031,\r\n  });\r\n  const [map, setMap] = useState(null);\r\n  const [showTraffic, setShowTraffic] = useState(false);  // Toggle traffic layer\r\n\r\n  // Fetch city coordinates and update map center\r\n  useEffect(() => {\r\n    const fetchCityData = async () => {\r\n      try {\r\n        const { lat, lon } = await getCityCoordinates(city);\r\n        setCenter({ lat, lng: lon });\r\n\r\n        // Fetch weather data for the new city\r\n        const weatherData = await getWeatherData(lat, lon);\r\n        setWeather(weatherData);\r\n      } catch (error) {\r\n        console.error('Error fetching city data:', error);\r\n        setWeather({ error: 'Failed to load city data' });\r\n      }\r\n    };\r\n\r\n    fetchCityData();\r\n  }, [city]);\r\n\r\n  // Handle map load\r\n  const onLoad = useCallback((map) => {\r\n    setMap(map);\r\n  }, []);\r\n\r\n  // Handle errors and loading states\r\n  if (loadError) return <div>Error loading maps</div>;\r\n  if (!isLoaded) return <div>Loading Maps...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"widgets\">\r\n        <div className=\"widget\">\r\n          <h2>Weather</h2>\r\n          <p>\r\n            {weather && weather.main\r\n              ? `${weather.main.temp}°C, ${weather.weather[0].description}`\r\n              : weather?.error || 'Loading weather data...'}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Toggle Traffic Button */}\r\n      <button\r\n        onClick={() => setShowTraffic(!showTraffic)}\r\n        className=\"traffic-toggle\"\r\n      >\r\n        {showTraffic ? 'Hide Traffic' : 'Show Traffic'}\r\n      </button>\r\n\r\n      {/* Map */}\r\n      <GoogleMap\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={13}\r\n        center={center}\r\n        onLoad={onLoad}  // Call onLoad when the map loads\r\n      >\r\n        {showTraffic && <TrafficLayer />}  {/* Conditionally render traffic layer */}\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}